apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b37a98485439c5c15028ca56752fb6234791fb3a08f97463e92e14fb5059b488
      cni.projectcalico.org/podIP: 172.32.125.233/32
      cni.projectcalico.org/podIPs: 172.32.125.233/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-api-6ddb6b4475-
    labels:
      app: taskQueue
      component: api
      pod-template-hash: 6ddb6b4475
    name: fb-api-6ddb6b4475-nzp62
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-api-6ddb6b4475
      uid: bdcf3fac-b337-4a4d-83b4-d58ba0cba2d9
    resourceVersion: "1495466"
    uid: 111f9f1b-f122-47d9-8152-d6591478579b
  spec:
    containers:
    - env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      - name: FBS_DATABASE_POSTGRESQL_SLAVE_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: mglue/fb-api:latest
      imagePullPolicy: Always
      name: api
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 50m
          memory: 150Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-slm8j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-slm8j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9e3cff1fa81f52bf0d2ffe2db7a5c0d8c832ba0af1172ccc142b85ca85b7219a
      image: docker.io/mglue/fb-api:latest
      imageID: docker.io/mglue/fb-api@sha256:7df0b1e4e13b2349c65e364a901d91cc9ba5adb87902108c019cdf50a1dcb9a8
      lastState: {}
      name: api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-07T04:52:54Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-slm8j
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.233
    podIPs:
    - ip: 172.32.125.233
    qosClass: Burstable
    startTime: "2025-02-07T04:52:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 2916685da358b620a616a4ae77cb7963866e463e2ed014d5543ff7abbd80d930
      cni.projectcalico.org/podIP: 172.32.125.213/32
      cni.projectcalico.org/podIPs: 172.32.125.213/32
      kubectl.kubernetes.io/restartedAt: "2025-02-07T04:07:39Z"
    creationTimestamp: "2025-02-07T04:07:36Z"
    generateName: fb-producer-86b69b56c8-
    labels:
      app: taskQueue
      component: producer
      pod-template-hash: 86b69b56c8
    name: fb-producer-86b69b56c8-w4b95
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-producer-86b69b56c8
      uid: 94934e4b-302a-4a71-b930-c29f8aebacba
    resourceVersion: "1490431"
    uid: e65a9180-16d4-4ea0-b61a-0a10ed51083c
  spec:
    containers:
    - env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: mglue/fb-producer:latest
      imagePullPolicy: Always
      name: producer
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wv6lb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wv6lb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:08:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:07:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:08:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:08:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:07:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7431d7b98e773e99740cc40424fd8caea9509d6e92bc2c3ccdb4e3cb3ed815a7
      image: docker.io/mglue/fb-producer:latest
      imageID: docker.io/mglue/fb-producer@sha256:07f81c23d26454f695cc216775b63ebd1630993d4db38b6f7ec56e4882c970c7
      lastState: {}
      name: producer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-07T04:08:21Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wv6lb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.213
    podIPs:
    - ip: 172.32.125.213
    qosClass: Burstable
    startTime: "2025-02-07T04:07:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3191e2f5c6ca4d8a183fb3b918bb6bb11b4b8ef0c3c95107917f620f9da6ea35
      cni.projectcalico.org/podIP: 172.32.125.235/32
      cni.projectcalico.org/podIPs: 172.32.125.235/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-79jwx
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1523027"
    uid: d0042c4a-ba96-4fb2-be98-e051045399ea
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-87p72
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-87p72
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:08:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:08:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://62312fe405464197254d86f41027bc9d83bf1196ecdbb892c0dcfb0bbb6ba037
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://4e6df8235e6b4ee0c3a01903e827085dce6ae9849fa8ae232226d2e303eecf2e
          exitCode: 1
          finishedAt: "2025-02-07T10:08:46Z"
          reason: OOMKilled
          startedAt: "2025-02-07T07:42:30Z"
      name: worker
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:08:49Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-87p72
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.235
    podIPs:
    - ip: 172.32.125.235
    qosClass: Burstable
    startTime: "2025-02-07T04:52:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 191d75702ebfb6a73de2309e3afee58b366c931cd730c0d643b20935a873cea9
      cni.projectcalico.org/podIP: 172.32.125.236/32
      cni.projectcalico.org/podIPs: 172.32.125.236/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-7p5wg
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1524599"
    uid: 2430516b-edf7-4d18-bdd1-4bbaba7e0d8f
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vl9qg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vl9qg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:26:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:26:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://874c7a887690658d6ff0ee24971b26a20f91316139db22799e5421521be98c5b
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://db05f14bf1867bc58f6cb50ea62354e4892be95c9770d1a4423bc7fc85ea6464
          exitCode: 1
          finishedAt: "2025-02-07T10:26:37Z"
          reason: Error
          startedAt: "2025-02-07T09:52:00Z"
      name: worker
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:26:40Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vl9qg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.236
    podIPs:
    - ip: 172.32.125.236
    qosClass: Burstable
    startTime: "2025-02-07T04:52:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 398c2270374085538838356f53c88bad652425f1742037443debd790cabbbb84
      cni.projectcalico.org/podIP: 172.32.125.222/32
      cni.projectcalico.org/podIPs: 172.32.125.222/32
    creationTimestamp: "2025-02-07T04:23:36Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-7xhsw
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1523990"
    uid: b695b568-d89e-40ab-be0d-8732c29301b5
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v2hs7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-v2hs7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:24:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:19:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:19:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://36b6c09e128a2b885bd964bb3ad6a9fd2fe1cc606d1167aa58a5aeb75bc6b86c
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://3db78c7d91a2a6d07f44538ac0b6aa2a5cd5235539ba0938cb0858eb31707c78
          exitCode: 1
          finishedAt: "2025-02-07T10:19:37Z"
          reason: Error
          startedAt: "2025-02-07T07:52:53Z"
      name: worker
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:19:40Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v2hs7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.222
    podIPs:
    - ip: 172.32.125.222
    qosClass: Burstable
    startTime: "2025-02-07T04:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3c7c0164d21023904cc0ed359e58b3dbeb8d822acc96005d16c5ce7fc20bb369
      cni.projectcalico.org/podIP: 172.32.125.207/32
      cni.projectcalico.org/podIPs: 172.32.125.207/32
    creationTimestamp: "2025-02-07T03:33:03Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-8ck46
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1520006"
    uid: 131b2415-06ed-4538-a31a-b75e8fd03872
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9twx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-n9twx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:34:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:33:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:33:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f2d78912a1436bc06641cbde7492616ca176e45b1517cc679175a206f1decbb7
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://68aad63cb448aec372da11ee20de77e06427cec25c6922788b617fce25022492
          exitCode: 1
          finishedAt: "2025-02-07T09:33:50Z"
          reason: OOMKilled
          startedAt: "2025-02-07T07:30:52Z"
      name: worker
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-02-07T09:33:52Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9twx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.207
    podIPs:
    - ip: 172.32.125.207
    qosClass: Burstable
    startTime: "2025-02-07T03:33:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 2f357bbb52afd9c6932f1e0336ba373e9b124d7ff9e2353ad20c9c8ac82efa03
      cni.projectcalico.org/podIP: 172.32.125.232/32
      cni.projectcalico.org/podIPs: 172.32.125.232/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-8jq7h
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1505765"
    uid: 5eaee40d-9dd5-4266-a9ed-391718dd97a1
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-29zn5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-29zn5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:36Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T06:49:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T06:49:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1565f81afd5889559b3213a0535fdd9015b7f533ee3982e6ca9b92c8474a5db8
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://a97a6da91b3245dcc9c5039e46bd86c66af9984e1f6f15df6205a615c5ccabac
          exitCode: 137
          finishedAt: "2025-02-07T06:49:42Z"
          reason: OOMKilled
          startedAt: "2025-02-07T06:11:24Z"
      name: worker
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-02-07T06:49:45Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-29zn5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.232
    podIPs:
    - ip: 172.32.125.232
    qosClass: Burstable
    startTime: "2025-02-07T04:52:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: fc0b109ef7b0322cc9c367331e838ff0b7323f7e6162b684bc7c56f619f3f751
      cni.projectcalico.org/podIP: 172.32.125.234/32
      cni.projectcalico.org/podIPs: 172.32.125.234/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-97gwj
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1510839"
    uid: e7fdfbd6-e563-4eaa-b8a3-a3c4e544ee6c
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9bd4h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9bd4h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T07:47:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T07:47:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f563565af8b7214fac148bf166d0749b9e83bf575331631737fbe758e5c63113
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://c17aff8a9bb05b70193e6ef09082ac3b2999f6431bf7b0b077ff63f3bdb17d5c
          exitCode: 137
          finishedAt: "2025-02-07T07:47:47Z"
          reason: OOMKilled
          startedAt: "2025-02-07T06:53:52Z"
      name: worker
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-02-07T07:47:50Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9bd4h
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.234
    podIPs:
    - ip: 172.32.125.234
    qosClass: Burstable
    startTime: "2025-02-07T04:52:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 895c8adb54d58f62cb216b94cebc5f57857416ad8cbab440b0ec85230c7142af
      cni.projectcalico.org/podIP: 172.32.248.154/32
      cni.projectcalico.org/podIPs: 172.32.248.154/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-9vtfm
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1525604"
    uid: d7d7926e-634b-4089-a99c-f3586864de73
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k48rh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-2.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-k48rh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:55:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:54:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:38:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:38:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:54:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a91aa8ad570859062c2cbaa236d44dfb420c9d919f5c1fd6b4f180c19fd2a474
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://e8f915b944c3c3097e4f84eaf71c9ce11635b1ed1e0e847f50879f464f8361e3
          exitCode: 137
          finishedAt: "2025-02-07T10:38:08Z"
          reason: OOMKilled
          startedAt: "2025-02-07T10:00:03Z"
      name: worker
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:38:13Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k48rh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.220
    hostIPs:
    - ip: 192.168.11.220
    phase: Running
    podIP: 172.32.248.154
    podIPs:
    - ip: 172.32.248.154
    qosClass: Burstable
    startTime: "2025-02-07T04:54:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 49dc2eb86e317fe6873c3070ccc92b275ad493100a8495724b66e0743fbe0116
      cni.projectcalico.org/podIP: 172.32.125.221/32
      cni.projectcalico.org/podIPs: 172.32.125.221/32
    creationTimestamp: "2025-02-07T04:23:36Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-clb9w
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1525054"
    uid: 1ae6039a-f53f-4199-9d89-161185295608
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dthjz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dthjz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:24:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:31:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:31:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d8db030d883f9ecbfed8cab2d2da369a83add58e2fd2213c8172f52d6cf6bbaa
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://55ac8c871e55649143eb91709c48ff8ed66bad123c845f7d0a81e5b82a7c92d9
          exitCode: 1
          finishedAt: "2025-02-07T10:31:54Z"
          reason: Error
          startedAt: "2025-02-07T08:37:04Z"
      name: worker
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:31:59Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dthjz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.221
    podIPs:
    - ip: 172.32.125.221
    qosClass: Burstable
    startTime: "2025-02-07T04:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 1cae9503ec4adf584fe48f19193c3b1383653af244f1b2ea546baf7826c9ffcc
      cni.projectcalico.org/podIP: 172.32.248.153/32
      cni.projectcalico.org/podIPs: 172.32.248.153/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-g42k5
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1524074"
    uid: f3c32a67-a6fe-4e6b-9ef5-41c1a25d1c5e
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5gl7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-2.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-q5gl7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:54:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:54:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:20:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:20:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:54:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d83214741054e3455a31f5d6fede4d71b2bd5b6354bca05daea5bf79f2a20532
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://68f14918cfd7d3748c93b6d0eb7fb2856697d50b0bf8537957f464264a99aa9f
          exitCode: 137
          finishedAt: "2025-02-07T10:20:25Z"
          reason: OOMKilled
          startedAt: "2025-02-07T09:56:34Z"
      name: worker
      ready: true
      restartCount: 8
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:20:28Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5gl7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.220
    hostIPs:
    - ip: 192.168.11.220
    phase: Running
    podIP: 172.32.248.153
    podIPs:
    - ip: 172.32.248.153
    qosClass: Burstable
    startTime: "2025-02-07T04:54:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 1130aedcf8ec226d8f0db1718ceba7334e6ed00fff45595d98b496afcd80020a
      cni.projectcalico.org/podIP: 172.32.125.231/32
      cni.projectcalico.org/podIPs: 172.32.125.231/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-gtxq2
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1525468"
    uid: c4963d29-fffd-411c-871a-4be4d8a3ef1c
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jpw78
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jpw78
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:36:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:36:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9bab88c04ccb4aedbea64bfca9bc34be1ee3f2f82e9bb9283643fdfacea7ab56
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://25dc62cce14cf98bade465e69083a889f2793f7987e1fde6f09fed816e226b5b
          exitCode: 1
          finishedAt: "2025-02-07T10:36:42Z"
          reason: OOMKilled
          startedAt: "2025-02-07T07:41:51Z"
      name: worker
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:36:45Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jpw78
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.231
    podIPs:
    - ip: 172.32.125.231
    qosClass: Burstable
    startTime: "2025-02-07T04:52:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 02a1c4d7d6949497e3f000d20c92db6ba1cf4f2e1635eb18a20b5ffd341875b8
      cni.projectcalico.org/podIP: 172.32.125.224/32
      cni.projectcalico.org/podIPs: 172.32.125.224/32
    creationTimestamp: "2025-02-07T04:23:36Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-hrhld
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1523872"
    uid: 283be955-f03d-4c24-95bd-0222ff1f4a15
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zn8hg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-zn8hg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:24:17Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:18:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:18:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1c508549f00b146e57d4dade39f737514e1115820f87996988ee82a4cc95c2c6
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://46dacad8f3e4f41fa66ac044d490ac9496fb79954f9b9eb0194cef65d9b39eae
          exitCode: 137
          finishedAt: "2025-02-07T10:18:28Z"
          reason: OOMKilled
          startedAt: "2025-02-07T09:10:34Z"
      name: worker
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:18:31Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zn8hg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.224
    podIPs:
    - ip: 172.32.125.224
    qosClass: Burstable
    startTime: "2025-02-07T04:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 253b39d7b2744025795078811d203731734f23da5a6df10af06be763d54b3f42
      cni.projectcalico.org/podIP: 172.32.125.214/32
      cni.projectcalico.org/podIPs: 172.32.125.214/32
    creationTimestamp: "2025-02-07T04:23:36Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-jjqt6
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1524680"
    uid: 26e53dac-f73c-4a28-858d-ae5883d41e3e
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9xmtr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9xmtr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:59Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:27:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:27:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://480490c0554e9d3eaa9c206bf73ae060ebd8a80cb5ec549095741c8f34425e18
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://0dcf603ce5d0faf80bdae2f87b4db23ac0460bf41a0eb2fd1e4a56c0cbec1f4e
          exitCode: 1
          finishedAt: "2025-02-07T10:27:27Z"
          reason: Error
          startedAt: "2025-02-07T08:47:44Z"
      name: worker
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:27:31Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9xmtr
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.214
    podIPs:
    - ip: 172.32.125.214
    qosClass: Burstable
    startTime: "2025-02-07T04:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 2be9db70216129947a7de0e67b05cc7630802444c85488d06b8b3052fbc7edfc
      cni.projectcalico.org/podIP: 172.32.125.225/32
      cni.projectcalico.org/podIPs: 172.32.125.225/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-lpx2x
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1523799"
    uid: 75a0e552-9269-42ee-852f-a1de2be7c375
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-98nnv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-98nnv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:17:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:17:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f0c807a94160dcfd3d7dd7c760a9af2af8604c28849fd9403f412d205438f202
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://0cd060ac339c547b6b45ab329d49d40976b9fce7c25df9f0fd1d60174eb32e55
          exitCode: 1
          finishedAt: "2025-02-07T10:17:49Z"
          reason: OOMKilled
          startedAt: "2025-02-07T06:42:49Z"
      name: worker
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:17:53Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-98nnv
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.225
    podIPs:
    - ip: 172.32.125.225
    qosClass: Burstable
    startTime: "2025-02-07T04:52:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: cb3814fc01dcabe2171c485e3d7f84bcc9edfb7efb5a7cb840891b17a980adf0
      cni.projectcalico.org/podIP: 172.32.125.217/32
      cni.projectcalico.org/podIPs: 172.32.125.217/32
    creationTimestamp: "2025-02-07T04:23:36Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-m2b4l
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1508829"
    uid: 7256ed7f-ea30-45af-9e3e-136602757e97
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-shbzb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-shbzb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:24:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T07:24:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T07:24:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://028cf915b0e1506b470b1e190cc23b801936e371bb44be5c59f3363a4dc62974
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://dc3c3f44865842105308230a7b5926fb3548ab80b1578f46c7d32a3c6c84d152
          exitCode: 137
          finishedAt: "2025-02-07T07:24:42Z"
          reason: OOMKilled
          startedAt: "2025-02-07T06:46:03Z"
      name: worker
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-02-07T07:24:46Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-shbzb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.217
    podIPs:
    - ip: 172.32.125.217
    qosClass: Burstable
    startTime: "2025-02-07T04:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9a28edc4cb8c9a1a8027642060a317f572d1e8af99753a6cfcd95aa31038736e
      cni.projectcalico.org/podIP: 172.32.125.230/32
      cni.projectcalico.org/podIPs: 172.32.125.230/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-nqg7p
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1521784"
    uid: 3a2f798e-320b-4873-9a5e-a2719dfee396
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hgcs9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hgcs9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:54:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:54:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f89b9d7301f488442a71da064ee53cdd4c1273e52157e4597a93992e48d9c641
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://147cb9b8e1ff86fa78ecb2977a91d375cb82c9d0b6e5c84f487e1fdf7b573955
          exitCode: 137
          finishedAt: "2025-02-07T09:54:03Z"
          reason: Error
          startedAt: "2025-02-07T09:01:48Z"
      name: worker
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-02-07T09:54:06Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hgcs9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.230
    podIPs:
    - ip: 172.32.125.230
    qosClass: Burstable
    startTime: "2025-02-07T04:52:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3c1fdeaf5e48d052eca236ce6a5afdbafa89be366ec26c86dae85e78e21b6c3f
      cni.projectcalico.org/podIP: 172.32.125.208/32
      cni.projectcalico.org/podIPs: 172.32.125.208/32
    creationTimestamp: "2025-02-07T03:33:03Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-qcgcf
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1517443"
    uid: e9f14e11-d84e-42db-861c-e0fbeaadcb2b
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hb7g7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hb7g7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:34:10Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:05:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:05:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://83113c24a096ebc1de802e8f020c3b3a317e67857de4b09e60de84ae5cad49de
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://5f68a75cc2c197a894bd9094ae8a4a5008449d795ced3e30aaba6bf36230f794
          exitCode: 1
          finishedAt: "2025-02-07T09:05:11Z"
          reason: OOMKilled
          startedAt: "2025-02-07T07:21:39Z"
      name: worker
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-02-07T09:05:15Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hb7g7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.208
    podIPs:
    - ip: 172.32.125.208
    qosClass: Burstable
    startTime: "2025-02-07T03:33:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e978034a240290b2eaac51b408e47396fb96fb1e6d381a4d8802fd77a62913b7
      cni.projectcalico.org/podIP: 172.32.125.216/32
      cni.projectcalico.org/podIPs: 172.32.125.216/32
    creationTimestamp: "2025-02-07T04:23:36Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-r75cr
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1523843"
    uid: 1944c509-cd1d-4949-8c04-62c631ef8e89
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g6bh7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-g6bh7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:24:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:18:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:18:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://20a000fb788491e72eea720d563f4498f5efaa9d801e8e0bf7deffa566cf926f
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://124e96757d1556e5a0a4b81a175bdbb0cddc9b6dd71e10164281f3b916ecf101
          exitCode: 137
          finishedAt: "2025-02-07T10:18:15Z"
          reason: OOMKilled
          startedAt: "2025-02-07T09:41:09Z"
      name: worker
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:18:18Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g6bh7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.216
    podIPs:
    - ip: 172.32.125.216
    qosClass: Burstable
    startTime: "2025-02-07T04:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9ca37fbd1494897b3d431170d599b8cc4fb709f733d3d68177c2c06a0e73218f
      cni.projectcalico.org/podIP: 172.32.125.218/32
      cni.projectcalico.org/podIPs: 172.32.125.218/32
    creationTimestamp: "2025-02-07T04:23:36Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-rt9cd
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1523891"
    uid: 3f844626-e37b-40a4-bbe0-b0dce7b7675d
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l2srq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-l2srq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:24:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:18:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:18:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://395a4db51dfa73b45b732d599ae830ff6b1c33e7eb2546e30e1576d9e2002093
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://1f9fa61ef06c9355954d2fcab210dedb4fa21533246b1614a5d056f1cad43636
          exitCode: 137
          finishedAt: "2025-02-07T10:18:35Z"
          reason: OOMKilled
          startedAt: "2025-02-07T09:55:56Z"
      name: worker
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:18:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l2srq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.218
    podIPs:
    - ip: 172.32.125.218
    qosClass: Burstable
    startTime: "2025-02-07T04:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d49098183ff8f536392aacd47ba4f8c7c145ce57fe0310d10a680dab7cb2b013
      cni.projectcalico.org/podIP: 172.32.125.219/32
      cni.projectcalico.org/podIPs: 172.32.125.219/32
    creationTimestamp: "2025-02-07T04:23:36Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-rzbzz
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1521692"
    uid: 19a9f4f0-ce25-409c-ac36-26937a3e0d52
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-286vj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-286vj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:24:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:53:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:53:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://448de9fd1d60af3e99881f953976ba9b0eb83c1ea38f680dcc9be837e44642d8
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://f26a73447af055a2dff169589e8a45dc58ee6bb5017dd8427c7adfcce6aa9f0e
          exitCode: 137
          finishedAt: "2025-02-07T09:53:05Z"
          reason: Error
          startedAt: "2025-02-07T09:04:29Z"
      name: worker
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2025-02-07T09:53:07Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-286vj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.219
    podIPs:
    - ip: 172.32.125.219
    qosClass: Burstable
    startTime: "2025-02-07T04:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 43fde2b88adaeed804acd53b29dd83d3ea7da9c0de58dd1573412589aefb5d26
      cni.projectcalico.org/podIP: 172.32.125.220/32
      cni.projectcalico.org/podIPs: 172.32.125.220/32
    creationTimestamp: "2025-02-07T04:23:36Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-tfd56
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1505090"
    uid: fb17c516-2b58-4586-be19-3854e0c0531a
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-92klj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-92klj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:24:10Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T06:42:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T06:42:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8966b5db395b5c9aaf4e5aade957517494d08dff0f6b984513b03a2f3bd2c9f8
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://f42560bb172dc25cd7ed7fef2f31ec9ddac223baa32ad5217fb9b6477035be70
          exitCode: 137
          finishedAt: "2025-02-07T06:41:58Z"
          reason: OOMKilled
          startedAt: "2025-02-07T06:20:01Z"
      name: worker
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-02-07T06:42:01Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-92klj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.220
    podIPs:
    - ip: 172.32.125.220
    qosClass: Burstable
    startTime: "2025-02-07T04:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d8beb4ccfb48b0ecb9e7f1fff714bd35fb366fa47a2b6b6393d9e7fece540737
      cni.projectcalico.org/podIP: 172.32.125.227/32
      cni.projectcalico.org/podIPs: 172.32.125.227/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-v2c6d
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1509019"
    uid: 5d7954d4-c02b-4259-a2bd-edfe3085bd9e
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tpgw6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tpgw6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T07:26:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T07:26:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://70434c8daaa4d62907b1d0d3abbb2be19f79777619ee1500772852efb5bc7a77
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://9bab71418e5e76c0651b82aebb3f759c5c8dddb00a593498f17ee93760d6f0fa
          exitCode: 137
          finishedAt: "2025-02-07T07:26:54Z"
          reason: OOMKilled
          startedAt: "2025-02-07T07:03:44Z"
      name: worker
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-02-07T07:26:57Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tpgw6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.227
    podIPs:
    - ip: 172.32.125.227
    qosClass: Burstable
    startTime: "2025-02-07T04:52:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c9970a109bfcfacfb5fd17fda92497c881f4e5dfbaf84d088de1d754be8f2765
      cni.projectcalico.org/podIP: 172.32.125.215/32
      cni.projectcalico.org/podIPs: 172.32.125.215/32
    creationTimestamp: "2025-02-07T04:23:36Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-vt4nq
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1514933"
    uid: 6d0d1cdf-144a-4fc2-9ceb-ef75a61c50c8
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k7zxh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-k7zxh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:24:01Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T08:35:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T08:35:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://74588bccd12576ee7663357c8da0f6378048fc1a40f4a9bf676bd49cb6088ee2
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://bc5e6518da17d2e2bf16353a6b6671344e85e2c0249520d03d81f1feae22074a
          exitCode: 137
          finishedAt: "2025-02-07T08:35:51Z"
          reason: Error
          startedAt: "2025-02-07T08:12:36Z"
      name: worker
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-02-07T08:35:54Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k7zxh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.215
    podIPs:
    - ip: 172.32.125.215
    qosClass: Burstable
    startTime: "2025-02-07T04:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 49f1288d8b90ab922089138657ce71f7fcb3e95a113beba8a204035c1a1de8ee
      cni.projectcalico.org/podIP: 172.32.125.210/32
      cni.projectcalico.org/podIPs: 172.32.125.210/32
    creationTimestamp: "2025-02-07T03:33:03Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-vtl4p
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1507186"
    uid: f2da016d-5e4e-4c9e-a878-118fa1ceb0e3
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zpn9c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-zpn9c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:34:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T07:05:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T07:05:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://674812e4cf4d534e75e15c3ec0769615a4de3c425fd3170ecd41661aa60216a8
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://7eedb3e392e11662104e696e7f0060222474007244d5750123bca8c46941e466
          exitCode: 137
          finishedAt: "2025-02-07T07:05:41Z"
          reason: OOMKilled
          startedAt: "2025-02-07T06:34:42Z"
      name: worker
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-02-07T07:05:44Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zpn9c
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.210
    podIPs:
    - ip: 172.32.125.210
    qosClass: Burstable
    startTime: "2025-02-07T03:33:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 0f8a6e55860bc208c9689e881c11de6fd21e49b71502f94d12b9c5d62ad1e699
      cni.projectcalico.org/podIP: 172.32.125.228/32
      cni.projectcalico.org/podIPs: 172.32.125.228/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-w26kq
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1523999"
    uid: 18019bc3-9a33-4468-b4d1-5937b3098e34
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-njp64
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-njp64
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:19:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:19:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9f3df9c004db57cf5518a6e12810e25aedd6c9b6785e0338f50f0a3ee7a40546
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://92a175669def15662c1b958503f83372dc2797fffb3204d78f636b3d95c1db41
          exitCode: 1
          finishedAt: "2025-02-07T10:19:37Z"
          reason: OOMKilled
          startedAt: "2025-02-07T06:39:54Z"
      name: worker
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:19:43Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-njp64
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.228
    podIPs:
    - ip: 172.32.125.228
    qosClass: Burstable
    startTime: "2025-02-07T04:52:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 278eff3d4b60157546b9eeb001b7e03acc0697d376134641af814f8330ae35f6
      cni.projectcalico.org/podIP: 172.32.125.223/32
      cni.projectcalico.org/podIPs: 172.32.125.223/32
    creationTimestamp: "2025-02-07T04:23:36Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-wjwhl
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1518850"
    uid: 095ff33d-8764-4ef7-99d0-84adb57e0455
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sr87t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-sr87t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:24:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:21:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:21:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:23:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b334ad26ed7e40aa2d8da12736c2672885724bc95b53590d57de3e5ca50a6375
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://bc133a6f70b6b3f2186b8365ad730784b259862f1e20f4f30a33e03ac515c6d7
          exitCode: 1
          finishedAt: "2025-02-07T09:21:40Z"
          reason: Error
          startedAt: "2025-02-07T08:34:11Z"
      name: worker
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2025-02-07T09:21:48Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sr87t
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.223
    podIPs:
    - ip: 172.32.125.223
    qosClass: Burstable
    startTime: "2025-02-07T04:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4e3616f648b1564734fdf6bed4c01f4f1686e67fd6be59c893453ddb2f26c487
      cni.projectcalico.org/podIP: 172.32.248.155/32
      cni.projectcalico.org/podIPs: 172.32.248.155/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-xlrjc
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1523457"
    uid: 1f996186-085c-4fe9-bbec-140f006a44f9
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dd8z2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-2.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dd8z2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:55:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:55:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:13:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:13:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:55:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://98937b3350b33d0cbd324c555dae3ff59076fe25f663d61a9c5c8a31aeb6bde2
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://d8a0969f45768ac3d46fbc43179aa9de290ba191a69ff5a0ed45ebd06846ffca
          exitCode: 137
          finishedAt: "2025-02-07T10:13:53Z"
          reason: OOMKilled
          startedAt: "2025-02-07T09:40:01Z"
      name: worker
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:13:55Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dd8z2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.220
    hostIPs:
    - ip: 192.168.11.220
    phase: Running
    podIP: 172.32.248.155
    podIPs:
    - ip: 172.32.248.155
    qosClass: Burstable
    startTime: "2025-02-07T04:55:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4e727a23fc73548ceff1f5e39d5428b30b0506881ed0afc5f1c472622aaf0ac5
      cni.projectcalico.org/podIP: 172.32.125.229/32
      cni.projectcalico.org/podIPs: 172.32.125.229/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-xmxkf
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1525771"
    uid: 92a3ce9c-0891-49a1-84ca-79e6ab8727da
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vkgv7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vkgv7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:40:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:40:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a55592a4d57ce86fe56bfd0cf7e00f66d8eda29601281a3fc1dd7d9df4fc12f7
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://945d31c5e792d3fe35f40fe504450cdeb303d24d7e53dc7f0e0166cb0d4f48c1
          exitCode: 1
          finishedAt: "2025-02-07T10:40:07Z"
          reason: Error
          startedAt: "2025-02-07T07:13:33Z"
      name: worker
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:40:10Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vkgv7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.229
    podIPs:
    - ip: 172.32.125.229
    qosClass: Burstable
    startTime: "2025-02-07T04:52:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4145d5143db6fd755ffa83947b4397333cd1835caf1d3b39ebbb2a58cf03314b
      cni.projectcalico.org/podIP: 172.32.125.209/32
      cni.projectcalico.org/podIPs: 172.32.125.209/32
    creationTimestamp: "2025-02-07T03:33:03Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-z64z7
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1516028"
    uid: a5a99d33-a386-4484-a3bf-7b4339b7e9c5
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mqkvl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mqkvl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:34:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T08:48:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T08:48:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9774178444cb8d1d6a8f6c941e2bb8c24c1609899b2ca883575cd89c8cdada71
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://e1cedb178d6a1f15ea024ca7e82caf50102c55324e9459b0ec3c7e79a67b2603
          exitCode: 1
          finishedAt: "2025-02-07T08:48:31Z"
          reason: Error
          startedAt: "2025-02-07T05:55:10Z"
      name: worker
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-02-07T08:48:34Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mqkvl
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.209
    podIPs:
    - ip: 172.32.125.209
    qosClass: Burstable
    startTime: "2025-02-07T03:33:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 2b96373862d6236436b96a002c55ef2389fe85fe3083a91833606fe3b8ef51f1
      cni.projectcalico.org/podIP: 172.32.125.226/32
      cni.projectcalico.org/podIPs: 172.32.125.226/32
    creationTimestamp: "2025-02-07T04:52:13Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-zfgcn
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1526067"
    uid: 65acc6aa-9d52-4b1c-b3f8-77af14ca4389
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rhgfp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rhgfp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:43:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:43:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:52:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f1b0291fc1302d808930a687b9b7b21f1e42e52ed37d96099b9e6af14e2cb7d6
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://6a4aa308fe97a140f131325eae6307984fd18e9f294c46e15454cf22424a7d54
          exitCode: 137
          finishedAt: "2025-02-07T10:43:37Z"
          reason: OOMKilled
          startedAt: "2025-02-07T10:32:14Z"
      name: worker
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:43:40Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rhgfp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.226
    podIPs:
    - ip: 172.32.125.226
    qosClass: Burstable
    startTime: "2025-02-07T04:52:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4fd24ad1cd6c973549c409274614226c4fa6c30fd7988d60e0ad0abe0e4295dc
      cni.projectcalico.org/podIP: 172.32.125.211/32
      cni.projectcalico.org/podIPs: 172.32.125.211/32
    creationTimestamp: "2025-02-07T03:33:03Z"
    generateName: fb-worker-7776484bf7-
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7-ztwqr
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fb-worker-7776484bf7
      uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
    resourceVersion: "1524282"
    uid: dcea7f6c-550b-4a9a-aeaa-dd4a9450ffca
  spec:
    containers:
    - command:
      - bash
      - -c
      - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app worker
        --loglevel=info --concurrency=1 --max-tasks-per-child=1
      env:
      - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
        value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
      imagePullPolicy: Always
      name: worker
      resources:
        limits:
          cpu: 500m
          memory: 1200Mi
        requests:
          cpu: 300m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvjfp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mvjfp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:34:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:22:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T10:22:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f2a2715e38ed4f84061bdd2cd1e5935092ffabb56fff72be82a6dea848f5055c
      image: registry.gitlab.com/thantzawlyn/fb_worker_update/main:latest
      imageID: registry.gitlab.com/thantzawlyn/fb_worker_update/main@sha256:c443d8020d91dd9420b88ade24502bf4b6482f7bc6542d453cf5ce7f43953a7f
      lastState:
        terminated:
          containerID: containerd://a591e5c4545569c55aa67393943598dd3982ce49480ebe015e454b51a6a03b3d
          exitCode: 137
          finishedAt: "2025-02-07T10:22:46Z"
          reason: OOMKilled
          startedAt: "2025-02-07T08:40:28Z"
      name: worker
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-02-07T10:22:54Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvjfp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.211
    podIPs:
    - ip: 172.32.125.211
    qosClass: Burstable
    startTime: "2025-02-07T03:33:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: a64c8cd033e879a1fb1b0d09751ff90594add319e9e033fc95cc5df5939d091c
      cni.projectcalico.org/podIP: 172.32.125.212/32
      cni.projectcalico.org/podIPs: 172.32.125.212/32
    creationTimestamp: "2025-02-07T03:33:21Z"
    generateName: rabbitmq-controller-
    labels:
      app: taskQueue
      component: rabbitmq
    name: rabbitmq-controller-9cmtn
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: rabbitmq-controller
      uid: a74c533c-fca1-4ed0-b2d7-eba60c506ed2
    resourceVersion: "1487853"
    uid: 1fa62c02-6021-4b42-90fa-a91b338dfb94
  spec:
    containers:
    - image: rabbitmq
      imagePullPolicy: Always
      name: rabbitmq
      ports:
      - containerPort: 5672
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zrbk8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-zrbk8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:36:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:37:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:37:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:33:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c6c93a0e4a1f8c98454a869abac24a4965d2a1003a7544a318a61073e6a26e72
      image: docker.io/library/rabbitmq:latest
      imageID: docker.io/library/rabbitmq@sha256:c4a0cd08a70c7b5ae3362b01f981235589ab35997073368395e111be8e8c4df1
      lastState: {}
      name: rabbitmq
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-07T03:37:16Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zrbk8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.212
    podIPs:
    - ip: 172.32.125.212
    qosClass: BestEffort
    startTime: "2025-02-07T03:33:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 374775196bd9e520184df209466bbcb561b9051be99f62e09f8f326bac7cfafc
      cni.projectcalico.org/podIP: 172.32.25.139/32
      cni.projectcalico.org/podIPs: 172.32.25.139/32
    creationTimestamp: "2024-09-11T13:34:49Z"
    generateName: calico-kube-controllers-6879d4fcdc-
    labels:
      k8s-app: calico-kube-controllers
      pod-template-hash: 6879d4fcdc
    name: calico-kube-controllers-6879d4fcdc-kflt5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: calico-kube-controllers-6879d4fcdc
      uid: 5369f685-469a-42e5-bb79-6aefcc358270
    resourceVersion: "404344"
    uid: d8ec061f-1061-40b4-b3fc-26f1b629e8a5
  spec:
    containers:
    - env:
      - name: ENABLED_CONTROLLERS
        value: node
      - name: DATASTORE_TYPE
        value: kubernetes
      image: docker.io/calico/kube-controllers:v3.25.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /usr/bin/check-status
          - -l
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-kube-controllers
      readinessProbe:
        exec:
          command:
          - /usr/bin/check-status
          - -r
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x5s8v
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-master.dsmstc.tech
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-kube-controllers
    serviceAccountName: calico-kube-controllers
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-x5s8v
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-09-13T02:04:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-09-13T02:03:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1e705f19b1390641fd12ba7c9405d410a282790727ac1b5012e5a01792b58ff8
      image: docker.io/calico/kube-controllers:v3.25.0
      imageID: docker.io/calico/kube-controllers@sha256:c45af3a9692d87a527451cf544557138fedf86f92b6e39bf2003e2fdb848dce3
      lastState:
        terminated:
          containerID: containerd://7cd1d8a6f28354e58ecf0a5871d4b135fdc1ee3263907827c398ae82a4ccc06b
          exitCode: 255
          finishedAt: "2025-01-29T10:28:18Z"
          reason: Unknown
          startedAt: "2024-09-13T02:04:50Z"
      name: calico-kube-controllers
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:27:37Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x5s8v
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.200
    hostIPs:
    - ip: 192.168.11.200
    phase: Running
    podIP: 172.32.25.139
    podIPs:
    - ip: 172.32.25.139
    qosClass: BestEffort
    startTime: "2024-09-13T02:04:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-09-09T09:23:07Z"
    generateName: calico-node-
    labels:
      controller-revision-hash: 645686658b
      k8s-app: calico-node
      pod-template-generation: "1"
    name: calico-node-7pbv2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: calico-node
      uid: 6bb6fb8d-7e48-4af9-ab16-38adee49e552
    resourceVersion: "1484852"
    uid: 8ac5e08a-8643-4e76-9d3f-331f00b7191f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-node-1.dsmstc.tech
    containers:
    - env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: WAIT_FOR_DATASTORE
        value: "true"
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CALICO_NETWORKING_BACKEND
        valueFrom:
          configMapKeyRef:
            key: calico_backend
            name: calico-config
      - name: CLUSTER_TYPE
        value: k8s,bgp
      - name: IP
        value: autodetect
      - name: CALICO_IPV4POOL_IPIP
        value: Always
      - name: CALICO_IPV4POOL_VXLAN
        value: Never
      - name: CALICO_IPV6POOL_VXLAN
        value: Never
      - name: FELIX_IPINIPMTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: FELIX_VXLANMTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: FELIX_WIREGUARDMTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: CALICO_DISABLE_FILE_LOGGING
        value: "true"
      - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        value: ACCEPT
      - name: FELIX_IPV6SUPPORT
        value: "false"
      - name: FELIX_HEALTHENABLED
        value: "true"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/node:v3.25.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/calico-node
            - -shutdown
      livenessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-live
          - -bird-live
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-node
      readinessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-ready
          - -bird-ready
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 250m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /sys/fs/bpf
        name: bpffs
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vd9s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /opt/cni/bin/calico-ipam
      - -upgrade
      env:
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CALICO_NETWORKING_BACKEND
        valueFrom:
          configMapKeyRef:
            key: calico_backend
            name: calico-config
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/cni:v3.25.0
      imagePullPolicy: IfNotPresent
      name: upgrade-ipam
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/cni/networks
        name: host-local-net-dir
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vd9s
        readOnly: true
    - command:
      - /opt/cni/bin/install
      env:
      - name: CNI_CONF_NAME
        value: 10-calico.conflist
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: calico-config
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CNI_MTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: SLEEP
        value: "false"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/cni:v3.25.0
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vd9s
        readOnly: true
    - command:
      - calico-node
      - -init
      - -best-effort
      image: docker.io/calico/node:v3.25.0
      imagePullPolicy: IfNotPresent
      name: mount-bpffs
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/fs
        mountPropagation: Bidirectional
        name: sys-fs
      - mountPath: /var/run/calico
        mountPropagation: Bidirectional
        name: var-run-calico
      - mountPath: /nodeproc
        name: nodeproc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vd9s
        readOnly: true
    nodeName: worker-node-1.dsmstc.tech
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-node
    serviceAccountName: calico-node
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /var/run/calico
        type: ""
      name: var-run-calico
    - hostPath:
        path: /var/lib/calico
        type: ""
      name: var-lib-calico
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /sys/fs/
        type: DirectoryOrCreate
      name: sys-fs
    - hostPath:
        path: /sys/fs/bpf
        type: Directory
      name: bpffs
    - hostPath:
        path: /proc
        type: ""
      name: nodeproc
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/calico/cni
        type: ""
      name: cni-log-dir
    - hostPath:
        path: /var/lib/cni/networks
        type: ""
      name: host-local-net-dir
    - hostPath:
        path: /var/run/nodeagent
        type: DirectoryOrCreate
      name: policysync
    - name: kube-api-access-7vd9s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:23:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:03:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:03:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:23:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dd0f9ece9b20ae7f4c1071880ffdb23a942442a164e4b66e9bec01978e46561f
      image: docker.io/calico/node:v3.25.0
      imageID: docker.io/calico/node@sha256:a85123d1882832af6c45b5e289c6bb99820646cb7d4f6006f98095168808b1e6
      lastState:
        terminated:
          containerID: containerd://21201a1d1e831efce2afb91da1b2d9d5b0d94640f3175904132da2c963c8ba77
          exitCode: 255
          finishedAt: "2024-11-05T03:40:04Z"
          reason: Unknown
          startedAt: "2024-09-13T04:50:53Z"
      name: calico-node
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:27:42Z"
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /sys/fs/bpf
        name: bpffs
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vd9s
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    initContainerStatuses:
    - containerID: containerd://092d22ac364769cd01222c92e3c0f9e36a2c287c5483d0014eb2d34947cde132
      image: docker.io/calico/cni:v3.25.0
      imageID: docker.io/calico/cni@sha256:a38d53cb8688944eafede2f0eadc478b1b403cefeff7953da57fe9cd2d65e977
      lastState: {}
      name: upgrade-ipam
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://092d22ac364769cd01222c92e3c0f9e36a2c287c5483d0014eb2d34947cde132
          exitCode: 0
          finishedAt: "2025-01-28T16:27:36Z"
          reason: Completed
          startedAt: "2025-01-28T16:27:36Z"
      volumeMounts:
      - mountPath: /var/lib/cni/networks
        name: host-local-net-dir
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vd9s
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://714f2e67a44d30a1f5059dd4722808d431d67031a379385eff5a1f2f900813b9
      image: docker.io/calico/cni:v3.25.0
      imageID: docker.io/calico/cni@sha256:a38d53cb8688944eafede2f0eadc478b1b403cefeff7953da57fe9cd2d65e977
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://714f2e67a44d30a1f5059dd4722808d431d67031a379385eff5a1f2f900813b9
          exitCode: 0
          finishedAt: "2025-01-28T16:27:40Z"
          reason: Completed
          startedAt: "2025-01-28T16:27:37Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vd9s
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://c24316ff46e37d6d1b6b82ef55650e70e885694001f12b159b63edfe1046b2e1
      image: docker.io/calico/node:v3.25.0
      imageID: docker.io/calico/node@sha256:a85123d1882832af6c45b5e289c6bb99820646cb7d4f6006f98095168808b1e6
      lastState: {}
      name: mount-bpffs
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c24316ff46e37d6d1b6b82ef55650e70e885694001f12b159b63edfe1046b2e1
          exitCode: 0
          finishedAt: "2025-01-28T16:27:41Z"
          reason: Completed
          startedAt: "2025-01-28T16:27:41Z"
      volumeMounts:
      - mountPath: /sys/fs
        name: sys-fs
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /nodeproc
        name: nodeproc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vd9s
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 192.168.11.210
    podIPs:
    - ip: 192.168.11.210
    qosClass: Burstable
    startTime: "2024-09-09T09:23:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-09-09T09:21:24Z"
    generateName: calico-node-
    labels:
      controller-revision-hash: 645686658b
      k8s-app: calico-node
      pod-template-generation: "1"
    name: calico-node-k74kl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: calico-node
      uid: 6bb6fb8d-7e48-4af9-ab16-38adee49e552
    resourceVersion: "404365"
    uid: 3d2cb2c4-940c-4c9e-a79b-2f7accc224db
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k8s-master.dsmstc.tech
    containers:
    - env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: WAIT_FOR_DATASTORE
        value: "true"
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CALICO_NETWORKING_BACKEND
        valueFrom:
          configMapKeyRef:
            key: calico_backend
            name: calico-config
      - name: CLUSTER_TYPE
        value: k8s,bgp
      - name: IP
        value: autodetect
      - name: CALICO_IPV4POOL_IPIP
        value: Always
      - name: CALICO_IPV4POOL_VXLAN
        value: Never
      - name: CALICO_IPV6POOL_VXLAN
        value: Never
      - name: FELIX_IPINIPMTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: FELIX_VXLANMTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: FELIX_WIREGUARDMTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: CALICO_DISABLE_FILE_LOGGING
        value: "true"
      - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        value: ACCEPT
      - name: FELIX_IPV6SUPPORT
        value: "false"
      - name: FELIX_HEALTHENABLED
        value: "true"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/node:v3.25.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/calico-node
            - -shutdown
      livenessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-live
          - -bird-live
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-node
      readinessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-ready
          - -bird-ready
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 250m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /sys/fs/bpf
        name: bpffs
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-whjl5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /opt/cni/bin/calico-ipam
      - -upgrade
      env:
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CALICO_NETWORKING_BACKEND
        valueFrom:
          configMapKeyRef:
            key: calico_backend
            name: calico-config
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/cni:v3.25.0
      imagePullPolicy: IfNotPresent
      name: upgrade-ipam
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/cni/networks
        name: host-local-net-dir
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-whjl5
        readOnly: true
    - command:
      - /opt/cni/bin/install
      env:
      - name: CNI_CONF_NAME
        value: 10-calico.conflist
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: calico-config
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CNI_MTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: SLEEP
        value: "false"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/cni:v3.25.0
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-whjl5
        readOnly: true
    - command:
      - calico-node
      - -init
      - -best-effort
      image: docker.io/calico/node:v3.25.0
      imagePullPolicy: IfNotPresent
      name: mount-bpffs
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/fs
        mountPropagation: Bidirectional
        name: sys-fs
      - mountPath: /var/run/calico
        mountPropagation: Bidirectional
        name: var-run-calico
      - mountPath: /nodeproc
        name: nodeproc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-whjl5
        readOnly: true
    nodeName: k8s-master.dsmstc.tech
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-node
    serviceAccountName: calico-node
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /var/run/calico
        type: ""
      name: var-run-calico
    - hostPath:
        path: /var/lib/calico
        type: ""
      name: var-lib-calico
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /sys/fs/
        type: DirectoryOrCreate
      name: sys-fs
    - hostPath:
        path: /sys/fs/bpf
        type: Directory
      name: bpffs
    - hostPath:
        path: /proc
        type: ""
      name: nodeproc
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/calico/cni
        type: ""
      name: cni-log-dir
    - hostPath:
        path: /var/lib/cni/networks
        type: ""
      name: host-local-net-dir
    - hostPath:
        path: /var/run/nodeagent
        type: DirectoryOrCreate
      name: policysync
    - name: kube-api-access-whjl5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:21:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:21:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f85dd1158af16f149b130cba565d7d7efb6d4cb56e28f5c355d2e281a7064421
      image: docker.io/calico/node:v3.25.0
      imageID: docker.io/calico/node@sha256:a85123d1882832af6c45b5e289c6bb99820646cb7d4f6006f98095168808b1e6
      lastState:
        terminated:
          containerID: containerd://5a8bbf19929573e16d36a54950352552b4c44b952a850b3dc97e5f89ec651132
          exitCode: 255
          finishedAt: "2025-01-29T10:28:18Z"
          reason: Unknown
          startedAt: "2024-09-13T02:04:19Z"
      name: calico-node
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:27:12Z"
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /sys/fs/bpf
        name: bpffs
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-whjl5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.200
    hostIPs:
    - ip: 192.168.11.200
    initContainerStatuses:
    - containerID: containerd://699ff736a3168e8954fcf76367726789791a05e6b1be1201f5ed8eb00ebd16a9
      image: docker.io/calico/cni:v3.25.0
      imageID: docker.io/calico/cni@sha256:a38d53cb8688944eafede2f0eadc478b1b403cefeff7953da57fe9cd2d65e977
      lastState: {}
      name: upgrade-ipam
      ready: true
      restartCount: 1
      started: false
      state:
        terminated:
          containerID: containerd://699ff736a3168e8954fcf76367726789791a05e6b1be1201f5ed8eb00ebd16a9
          exitCode: 0
          finishedAt: "2025-01-28T16:27:06Z"
          reason: Completed
          startedAt: "2025-01-28T16:27:04Z"
      volumeMounts:
      - mountPath: /var/lib/cni/networks
        name: host-local-net-dir
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-whjl5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://8bcfd6559621376020e02355d4b1f64ca46e1d07775eedf01312e4888fcc683c
      image: docker.io/calico/cni:v3.25.0
      imageID: docker.io/calico/cni@sha256:a38d53cb8688944eafede2f0eadc478b1b403cefeff7953da57fe9cd2d65e977
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8bcfd6559621376020e02355d4b1f64ca46e1d07775eedf01312e4888fcc683c
          exitCode: 0
          finishedAt: "2025-01-28T16:27:10Z"
          reason: Completed
          startedAt: "2025-01-28T16:27:06Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-whjl5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://d8daba2ff4da1d81ec4d6c88c77d7b560aa87f5cd1d069987b73425389388f12
      image: docker.io/calico/node:v3.25.0
      imageID: docker.io/calico/node@sha256:a85123d1882832af6c45b5e289c6bb99820646cb7d4f6006f98095168808b1e6
      lastState: {}
      name: mount-bpffs
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d8daba2ff4da1d81ec4d6c88c77d7b560aa87f5cd1d069987b73425389388f12
          exitCode: 0
          finishedAt: "2025-01-28T16:27:11Z"
          reason: Completed
          startedAt: "2025-01-28T16:27:10Z"
      volumeMounts:
      - mountPath: /sys/fs
        name: sys-fs
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /nodeproc
        name: nodeproc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-whjl5
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 192.168.11.200
    podIPs:
    - ip: 192.168.11.200
    qosClass: Burstable
    startTime: "2024-09-09T09:21:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-09-09T09:44:49Z"
    generateName: calico-node-
    labels:
      controller-revision-hash: 645686658b
      k8s-app: calico-node
      pod-template-generation: "1"
    name: calico-node-kjmph
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: calico-node
      uid: 6bb6fb8d-7e48-4af9-ab16-38adee49e552
    resourceVersion: "1495632"
    uid: 9a6548c1-7a28-4c88-8ae8-a8d925c791de
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-node-2.dsmstc.tech
    containers:
    - env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: WAIT_FOR_DATASTORE
        value: "true"
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CALICO_NETWORKING_BACKEND
        valueFrom:
          configMapKeyRef:
            key: calico_backend
            name: calico-config
      - name: CLUSTER_TYPE
        value: k8s,bgp
      - name: IP
        value: autodetect
      - name: CALICO_IPV4POOL_IPIP
        value: Always
      - name: CALICO_IPV4POOL_VXLAN
        value: Never
      - name: CALICO_IPV6POOL_VXLAN
        value: Never
      - name: FELIX_IPINIPMTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: FELIX_VXLANMTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: FELIX_WIREGUARDMTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: CALICO_DISABLE_FILE_LOGGING
        value: "true"
      - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        value: ACCEPT
      - name: FELIX_IPV6SUPPORT
        value: "false"
      - name: FELIX_HEALTHENABLED
        value: "true"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/node:v3.25.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/calico-node
            - -shutdown
      livenessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-live
          - -bird-live
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-node
      readinessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-ready
          - -bird-ready
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 250m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /sys/fs/bpf
        name: bpffs
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnd97
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /opt/cni/bin/calico-ipam
      - -upgrade
      env:
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CALICO_NETWORKING_BACKEND
        valueFrom:
          configMapKeyRef:
            key: calico_backend
            name: calico-config
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/cni:v3.25.0
      imagePullPolicy: IfNotPresent
      name: upgrade-ipam
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/cni/networks
        name: host-local-net-dir
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnd97
        readOnly: true
    - command:
      - /opt/cni/bin/install
      env:
      - name: CNI_CONF_NAME
        value: 10-calico.conflist
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: calico-config
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CNI_MTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: calico-config
      - name: SLEEP
        value: "false"
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: docker.io/calico/cni:v3.25.0
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnd97
        readOnly: true
    - command:
      - calico-node
      - -init
      - -best-effort
      image: docker.io/calico/node:v3.25.0
      imagePullPolicy: IfNotPresent
      name: mount-bpffs
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/fs
        mountPropagation: Bidirectional
        name: sys-fs
      - mountPath: /var/run/calico
        mountPropagation: Bidirectional
        name: var-run-calico
      - mountPath: /nodeproc
        name: nodeproc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnd97
        readOnly: true
    nodeName: worker-node-2.dsmstc.tech
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-node
    serviceAccountName: calico-node
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /var/run/calico
        type: ""
      name: var-run-calico
    - hostPath:
        path: /var/lib/calico
        type: ""
      name: var-lib-calico
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /sys/fs/
        type: DirectoryOrCreate
      name: sys-fs
    - hostPath:
        path: /sys/fs/bpf
        type: Directory
      name: bpffs
    - hostPath:
        path: /proc
        type: ""
      name: nodeproc
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/calico/cni
        type: ""
      name: cni-log-dir
    - hostPath:
        path: /var/lib/cni/networks
        type: ""
      name: host-local-net-dir
    - hostPath:
        path: /var/run/nodeagent
        type: DirectoryOrCreate
      name: policysync
    - name: kube-api-access-dnd97
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T02:49:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:44:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:54:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T04:54:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:44:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ba1cc5db2c0705c1b60657e2b9565a63735c5fa8c8c454dada7ea853496c28b5
      image: docker.io/calico/node:v3.25.0
      imageID: docker.io/calico/node@sha256:a85123d1882832af6c45b5e289c6bb99820646cb7d4f6006f98095168808b1e6
      lastState:
        terminated:
          containerID: containerd://00ad4cea1b5a5047cf6cb2660088008fe586add6aa503e5769e32770790c1007
          exitCode: 255
          finishedAt: "2025-02-07T02:49:53Z"
          reason: Unknown
          startedAt: "2025-01-28T16:47:47Z"
      name: calico-node
      ready: true
      restartCount: 10
      started: true
      state:
        running:
          startedAt: "2025-02-07T02:49:59Z"
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /sys/fs/bpf
        name: bpffs
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnd97
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.220
    hostIPs:
    - ip: 192.168.11.220
    initContainerStatuses:
    - containerID: containerd://cfd55eaf0c71c73124952db950f2ca3e5f09cbc7e489d19a9b1679df68908368
      image: docker.io/calico/cni:v3.25.0
      imageID: docker.io/calico/cni@sha256:a38d53cb8688944eafede2f0eadc478b1b403cefeff7953da57fe9cd2d65e977
      lastState: {}
      name: upgrade-ipam
      ready: true
      restartCount: 7
      started: false
      state:
        terminated:
          containerID: containerd://cfd55eaf0c71c73124952db950f2ca3e5f09cbc7e489d19a9b1679df68908368
          exitCode: 0
          finishedAt: "2025-02-07T02:49:56Z"
          reason: Completed
          startedAt: "2025-02-07T02:49:56Z"
      volumeMounts:
      - mountPath: /var/lib/cni/networks
        name: host-local-net-dir
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnd97
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://8bc3e31dd8e8d41a3ccd895e49e8a3677b27b9b20f7be21e4ea1583fb5aa235f
      image: docker.io/calico/cni:v3.25.0
      imageID: docker.io/calico/cni@sha256:a38d53cb8688944eafede2f0eadc478b1b403cefeff7953da57fe9cd2d65e977
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8bc3e31dd8e8d41a3ccd895e49e8a3677b27b9b20f7be21e4ea1583fb5aa235f
          exitCode: 0
          finishedAt: "2025-02-07T02:49:58Z"
          reason: Completed
          startedAt: "2025-02-07T02:49:56Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnd97
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://58551001659748a272ebefa54c4072e81b65299d246c97553d6bab70827469cc
      image: docker.io/calico/node:v3.25.0
      imageID: docker.io/calico/node@sha256:a85123d1882832af6c45b5e289c6bb99820646cb7d4f6006f98095168808b1e6
      lastState: {}
      name: mount-bpffs
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://58551001659748a272ebefa54c4072e81b65299d246c97553d6bab70827469cc
          exitCode: 0
          finishedAt: "2025-02-07T02:49:58Z"
          reason: Completed
          startedAt: "2025-02-07T02:49:58Z"
      volumeMounts:
      - mountPath: /sys/fs
        name: sys-fs
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /nodeproc
        name: nodeproc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnd97
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 192.168.11.220
    podIPs:
    - ip: 192.168.11.220
    qosClass: Burstable
    startTime: "2024-09-09T09:44:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9b9d8de05b1848739629ddca786da4cd633765484b4535a991e1f58cc48952d9
      cni.projectcalico.org/podIP: 172.32.25.141/32
      cni.projectcalico.org/podIPs: 172.32.25.141/32
      kubectl.kubernetes.io/restartedAt: "2025-02-07T09:30:01Z"
    creationTimestamp: "2025-02-07T09:40:37Z"
    generateName: coredns-85555666d5-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 85555666d5
    name: coredns-85555666d5-4rkq9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-85555666d5
      uid: afad255d-f0c6-46b2-81e9-8e5e5224c3ea
    resourceVersion: "1520598"
    uid: 8e4393e4-c853-47ec-b2f4-d7e9350e5376
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kv5rt
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: k8s-master.dsmstc.tech
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-kv5rt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:40:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:40:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:40:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:40:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:40:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://041050895e133d842a6ad7e1df3b13cc8cb3a043e996e2276ad32a3fc033aaaf
      image: registry.k8s.io/coredns/coredns:v1.11.1
      imageID: registry.k8s.io/coredns/coredns@sha256:1eeb4c7316bacb1d4c8ead65571cd92dd21e27359f0d4917f1a5822a73b75db1
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-07T09:40:38Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kv5rt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.200
    hostIPs:
    - ip: 192.168.11.200
    phase: Running
    podIP: 172.32.25.141
    podIPs:
    - ip: 172.32.25.141
    qosClass: Burstable
    startTime: "2025-02-07T09:40:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 83ce448eeec2e5384ce1af0a5cb97989be1749158e5131a9fec1a09870c3d90b
      cni.projectcalico.org/podIP: 172.32.248.159/32
      cni.projectcalico.org/podIPs: 172.32.248.159/32
      kubectl.kubernetes.io/restartedAt: "2025-02-07T09:30:01Z"
    creationTimestamp: "2025-02-07T09:40:53Z"
    generateName: coredns-85555666d5-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 85555666d5
    name: coredns-85555666d5-v67md
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-85555666d5
      uid: afad255d-f0c6-46b2-81e9-8e5e5224c3ea
    resourceVersion: "1520653"
    uid: e8e50148-0dd6-4b1b-934f-a24fda1748ba
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qpdbh
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: worker-node-2.dsmstc.tech
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-qpdbh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:40:54Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:40:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:40:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:40:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:40:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0cda588d82dbd0b89817e9a507b50c925c939edeecf46fe48eed7e59f803d4bc
      image: registry.k8s.io/coredns/coredns:v1.11.1
      imageID: registry.k8s.io/coredns/coredns@sha256:1eeb4c7316bacb1d4c8ead65571cd92dd21e27359f0d4917f1a5822a73b75db1
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-07T09:40:54Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qpdbh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.220
    hostIPs:
    - ip: 192.168.11.220
    phase: Running
    podIP: 172.32.248.159
    podIPs:
    - ip: 172.32.248.159
    qosClass: Burstable
    startTime: "2025-02-07T09:40:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.11.200:2379
      kubernetes.io/config.hash: c01a84f83c8ef7b1ecea872f64fc9e3e
      kubernetes.io/config.mirror: c01a84f83c8ef7b1ecea872f64fc9e3e
      kubernetes.io/config.seen: "2024-09-09T09:12:20.425517052Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-09-09T09:12:22Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-k8s-master.dsmstc.tech
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: k8s-master.dsmstc.tech
      uid: d8b79203-1a27-403a-b258-6b31f16a264f
    resourceVersion: "492954"
    uid: 4ef9de44-425a-4cdb-918f-80cf78d6463f
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.11.200:2379
      - --cert-file=/etc/kubernetes/pki/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://192.168.11.200:2380
      - --initial-cluster=k8s-master.dsmstc.tech=https://192.168.11.200:2380
      - --key-file=/etc/kubernetes/pki/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.11.200:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.11.200:2380
      - --name=k8s-master.dsmstc.tech
      - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
      - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      - --snapshot-count=10000
      - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.15-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /livez
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /readyz
          port: 2381
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /readyz
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/etcd
        name: etcd-data
      - mountPath: /etc/kubernetes/pki/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k8s-master.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/pki/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b947cff4715d859253a3223640e9426b9dd9b0402a58db9007428416daf2647e
      image: registry.k8s.io/etcd:3.5.15-0
      imageID: registry.k8s.io/etcd@sha256:a6dc63e6e8cfa0307d7851762fa6b629afb18f28d8aa3fab5a6e91b4af60026a
      lastState:
        terminated:
          containerID: containerd://805db68dd97b57b585877f0eefbc6fab2e8077993faaaed3d557afcb4ae1f056
          exitCode: 255
          finishedAt: "2025-01-29T10:28:18Z"
          reason: Unknown
          startedAt: "2024-09-12T10:28:54Z"
      name: etcd
      ready: true
      restartCount: 10
      started: true
      state:
        running:
          startedAt: "2025-01-29T10:28:40Z"
    hostIP: 192.168.11.200
    hostIPs:
    - ip: 192.168.11.200
    phase: Running
    podIP: 192.168.11.200
    podIPs:
    - ip: 192.168.11.200
    qosClass: Burstable
    startTime: "2025-01-29T10:28:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.11.200:6443
      kubernetes.io/config.hash: eb58716375c4b0ff3329a4119099d661
      kubernetes.io/config.mirror: eb58716375c4b0ff3329a4119099d661
      kubernetes.io/config.seen: "2024-09-09T09:12:20.425527003Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-09-09T09:12:22Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-k8s-master.dsmstc.tech
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: k8s-master.dsmstc.tech
      uid: d8b79203-1a27-403a-b258-6b31f16a264f
    resourceVersion: "492956"
    uid: 0b27f837-3444-4109-984f-4b547d71e8c9
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.11.200
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
      - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
      - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
      - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=6443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/etc/kubernetes/pki/sa.pub
      - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.31.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.11.200
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.11.200
          path: /readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.11.200
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k8s-master.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c06c6a3c6a37b33701569cd813e810c2da81bce56f6d05aa9e8aa783d62b4f40
      image: registry.k8s.io/kube-apiserver:v1.31.0
      imageID: registry.k8s.io/kube-apiserver@sha256:470179274deb9dc3a81df55cfc24823ce153147d4ebf2ed649a4f271f51eaddf
      lastState:
        terminated:
          containerID: containerd://97f4ce958a0893fcdac02ea31dc07504bc4d6551507c5023c5158fb705213bc9
          exitCode: 255
          finishedAt: "2025-01-29T10:28:18Z"
          reason: Unknown
          startedAt: "2024-09-12T10:28:54Z"
      name: kube-apiserver
      ready: true
      restartCount: 11
      started: true
      state:
        running:
          startedAt: "2025-01-29T10:28:40Z"
    hostIP: 192.168.11.200
    hostIPs:
    - ip: 192.168.11.200
    phase: Running
    podIP: 192.168.11.200
    podIPs:
    - ip: 192.168.11.200
    qosClass: Burstable
    startTime: "2025-01-29T10:28:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 802e0f4c246f1cdde97a3297f759dcdc
      kubernetes.io/config.mirror: 802e0f4c246f1cdde97a3297f759dcdc
      kubernetes.io/config.seen: "2024-09-09T09:12:20.425529419Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-09-09T09:12:24Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-k8s-master.dsmstc.tech
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: k8s-master.dsmstc.tech
      uid: d8b79203-1a27-403a-b258-6b31f16a264f
    resourceVersion: "492958"
    uid: ebf7979a-15d5-49e9-8d53-db64f626a508
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --cluster-cidr=172.32.0.0/16
      - --cluster-name=kubernetes
      - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
      - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=true
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --root-ca-file=/etc/kubernetes/pki/ca.crt
      - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.31.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k8s-master.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ebc7622a7c691bf867ec9c8532ba055f2e791adc3db3e68611728d867c2cf0e6
      image: registry.k8s.io/kube-controller-manager:v1.31.0
      imageID: registry.k8s.io/kube-controller-manager@sha256:f6f3c33dda209e8434b83dacf5244c03b59b0018d93325ff21296a142b68497d
      lastState:
        terminated:
          containerID: containerd://1286c5bf894bbddd7065ebaf603fd5c7c7f75657e2cf9b5c63659d32fbe39743
          exitCode: 255
          finishedAt: "2025-01-29T10:28:18Z"
          reason: Unknown
          startedAt: "2024-09-12T10:28:53Z"
      name: kube-controller-manager
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-01-29T10:28:40Z"
    hostIP: 192.168.11.200
    hostIPs:
    - ip: 192.168.11.200
    phase: Running
    podIP: 192.168.11.200
    podIPs:
    - ip: 192.168.11.200
    qosClass: Burstable
    startTime: "2025-01-29T10:28:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-09-09T09:44:49Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5976bc5f75
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-qd6b2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 2fcbbad2-7572-4a4c-802f-cfe9eea7dd4b
    resourceVersion: "1495015"
    uid: 46266dfd-f6a6-4da1-92e5-9e3969fe97ee
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-node-2.dsmstc.tech
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.31.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fxspn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: worker-node-2.dsmstc.tech
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-fxspn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T02:49:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:44:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T02:49:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T02:49:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:44:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d86ba13c8cf61a7de651c82fa395cfbe9a8ebdc852902db05834c21af5e4add6
      image: registry.k8s.io/kube-proxy:v1.31.0
      imageID: registry.k8s.io/kube-proxy@sha256:c727efb1c6f15a68060bf7f207f5c7a765355b7e3340c513e582ec819c5cd2fe
      lastState:
        terminated:
          containerID: containerd://abcb151361ce9b06b89e94c26d0f2d19144fb5c07495b6fa1d3c81dead700dde
          exitCode: 255
          finishedAt: "2025-02-07T02:49:53Z"
          reason: Unknown
          startedAt: "2025-01-28T16:47:42Z"
      name: kube-proxy
      ready: true
      restartCount: 10
      started: true
      state:
        running:
          startedAt: "2025-02-07T02:49:56Z"
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fxspn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.220
    hostIPs:
    - ip: 192.168.11.220
    phase: Running
    podIP: 192.168.11.220
    podIPs:
    - ip: 192.168.11.220
    qosClass: BestEffort
    startTime: "2024-09-09T09:44:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-09-09T09:23:07Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5976bc5f75
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-r8xq7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 2fcbbad2-7572-4a4c-802f-cfe9eea7dd4b
    resourceVersion: "404254"
    uid: 2868f527-d81a-4574-a19b-65b45eb0575b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-node-1.dsmstc.tech
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.31.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l4swp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: worker-node-1.dsmstc.tech
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-l4swp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:23:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:23:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://21476988d8d515667f2c976d8ea42cc41c451d05900343771c7708c99f49c521
      image: registry.k8s.io/kube-proxy:v1.31.0
      imageID: registry.k8s.io/kube-proxy@sha256:c727efb1c6f15a68060bf7f207f5c7a765355b7e3340c513e582ec819c5cd2fe
      lastState:
        terminated:
          containerID: containerd://65c205a6a47fc7d951e99b18da8ddc0fbdd6b1e93952e270ad5acb28dc4b46ca
          exitCode: 255
          finishedAt: "2024-11-05T03:40:04Z"
          reason: Unknown
          startedAt: "2024-09-13T04:50:46Z"
      name: kube-proxy
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:27:35Z"
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l4swp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 192.168.11.210
    podIPs:
    - ip: 192.168.11.210
    qosClass: BestEffort
    startTime: "2024-09-09T09:23:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-09-09T09:12:20Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5976bc5f75
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-thf49
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 2fcbbad2-7572-4a4c-802f-cfe9eea7dd4b
    resourceVersion: "404087"
    uid: 3ae28ca8-0d91-4ff2-b6a7-516e3c8682df
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k8s-master.dsmstc.tech
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.31.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hqzfn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k8s-master.dsmstc.tech
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-hqzfn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:12:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:27:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-09-09T09:12:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://85a4b9b6ab6c1f4d044430fc44649a77acb9c54f1f3274e4aec10400082f4520
      image: registry.k8s.io/kube-proxy:v1.31.0
      imageID: registry.k8s.io/kube-proxy@sha256:c727efb1c6f15a68060bf7f207f5c7a765355b7e3340c513e582ec819c5cd2fe
      lastState:
        terminated:
          containerID: containerd://98574e630fafaf416ac591d8d46872ab37d73e8836772f4953a30591bcea2139
          exitCode: 255
          finishedAt: "2025-01-29T10:28:18Z"
          reason: Unknown
          startedAt: "2024-09-13T02:04:15Z"
      name: kube-proxy
      ready: true
      restartCount: 16
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:27:04Z"
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hqzfn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.200
    hostIPs:
    - ip: 192.168.11.200
    phase: Running
    podIP: 192.168.11.200
    podIPs:
    - ip: 192.168.11.200
    qosClass: BestEffort
    startTime: "2024-09-09T09:12:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: d41f4a1063cd9b4f68bb431952210b7c
      kubernetes.io/config.mirror: d41f4a1063cd9b4f68bb431952210b7c
      kubernetes.io/config.seen: "2024-09-09T09:12:20.425531224Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-09-09T09:12:24Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-k8s-master.dsmstc.tech
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: k8s-master.dsmstc.tech
      uid: d8b79203-1a27-403a-b258-6b31f16a264f
    resourceVersion: "492957"
    uid: e6a77d7f-b533-4704-bb81-6d027ccb9caf
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=true
      image: registry.k8s.io/kube-scheduler:v1.31.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k8s-master.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-29T10:28:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://25463a37330f18280b2ec4187c9e215e5c20a3fb0c72d54a03dd118cd095ad17
      image: registry.k8s.io/kube-scheduler:v1.31.0
      imageID: registry.k8s.io/kube-scheduler@sha256:96ddae9c9b2e79342e0551e2d2ec422c0c02629a74d928924aaa069706619808
      lastState:
        terminated:
          containerID: containerd://f0adebf0b6d85943cc033d12b904851fdbe82e8a256fcd762e52ad9a8da05da7
          exitCode: 255
          finishedAt: "2025-01-29T10:28:18Z"
          reason: Unknown
          startedAt: "2024-09-12T10:28:54Z"
      name: kube-scheduler
      ready: true
      restartCount: 11
      started: true
      state:
        running:
          startedAt: "2025-01-29T10:28:40Z"
    hostIP: 192.168.11.200
    hostIPs:
    - ip: 192.168.11.200
    phase: Running
    podIP: 192.168.11.200
    podIPs:
    - ip: 192.168.11.200
    qosClass: Burstable
    startTime: "2025-01-29T10:28:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 8f6612f96f4df2c3b7abcff588cb6078a1a87862554d6a1fe312d04e54aa7c4d
      cni.projectcalico.org/podIP: 172.32.248.156/32
      cni.projectcalico.org/podIPs: 172.32.248.156/32
    creationTimestamp: "2025-02-07T09:25:05Z"
    generateName: kube-state-metrics-6b5955fdf5-
    labels:
      app.kubernetes.io/instance: kube-state-metrics
      app.kubernetes.io/name: kube-state-metrics
      pod-template-hash: 6b5955fdf5
    name: kube-state-metrics-6b5955fdf5-rp9bj
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-state-metrics-6b5955fdf5
      uid: 245dda13-1a26-4547-aec5-d69c96df3837
    resourceVersion: "1519190"
    uid: 05e3fdaa-4aec-47ae-afa6-5438d822670b
  spec:
    containers:
    - args:
      - --collectors=certificatesigningrequests
      - --collectors=configmaps
      - --collectors=cronjobs
      - --collectors=daemonsets
      - --collectors=deployments
      - --collectors=endpoints
      - --collectors=horizontalpodautoscalers
      - --collectors=ingresses
      - --collectors=jobs
      - --collectors=limitranges
      - --collectors=mutatingwebhookconfigurations
      - --collectors=namespaces
      - --collectors=networkpolicies
      - --collectors=nodes
      - --collectors=persistentvolumeclaims
      - --collectors=persistentvolumes
      - --collectors=poddisruptionbudgets
      - --collectors=pods
      - --collectors=replicasets
      - --collectors=replicationcontrollers
      - --collectors=resourcequotas
      - --collectors=secrets
      - --collectors=services
      - --collectors=statefulsets
      - --collectors=storageclasses
      - --collectors=validatingwebhookconfigurations
      - --collectors=volumeattachments
      - --telemetry-port=8081
      image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v1.9.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8rz4f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-2.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsUser: 65534
    serviceAccount: kube-state-metrics
    serviceAccountName: kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8rz4f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:25:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:25:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:25:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:25:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T09:25:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1c863bb34755ac76c752b3757e63e30e8fa828050adc914c5dee7e1a3fa29ceb
      image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v1.9.8
      imageID: k8s.gcr.io/kube-state-metrics/kube-state-metrics@sha256:47d3a12d9da6699a9d95df8aaff235305229ef08203fae3fc1f1d47b2a409f89
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-07T09:25:15Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8rz4f
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.220
    hostIPs:
    - ip: 192.168.11.220
    phase: Running
    podIP: 172.32.248.156
    podIPs:
    - ip: 172.32.248.156
    qosClass: BestEffort
    startTime: "2025-02-07T09:25:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: f1b95ba3b88bb6e088f3fc4ba4cf4f28452bddbde5352a5c6130a9117cc9e3c9
      cni.projectcalico.org/containerID: 42cbcec370b8247b7adb926d5a302c0459f174e2e19ffd6e139d9d17327bef46
      cni.projectcalico.org/podIP: 172.32.125.205/32
      cni.projectcalico.org/podIPs: 172.32.125.205/32
    creationTimestamp: "2025-01-28T16:33:42Z"
    generateName: kubernetes-dashboard-api-78c496b88f-
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-api
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.7.0
      helm.sh/chart: kubernetes-dashboard-7.5.0
      pod-template-hash: 78c496b88f
    name: kubernetes-dashboard-api-78c496b88f-fs8x4
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-api-78c496b88f
      uid: 619bb260-59b4-4ce0-8f78-ddea43940b73
    resourceVersion: "405026"
    uid: eec5ca80-04c5-4025-baf2-1d811923b24b
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --namespace=kubernetes-dashboard
      - --metrics-scraper-service-name=kubernetes-dashboard-metrics-scraper
      env:
      - name: CSRF_KEY
        valueFrom:
          secretKeyRef:
            key: private.key
            name: kubernetes-dashboard-csrf
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      image: docker.io/kubernetesui/dashboard-api:1.7.0
      imagePullPolicy: IfNotPresent
      name: kubernetes-dashboard-api
      ports:
      - containerPort: 8000
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: 250m
          memory: 400Mi
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zsshx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kubernetes-dashboard-api
    serviceAccountName: kubernetes-dashboard-api
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kube-api-access-zsshx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://099b326660f91a8420789211d2a17e857f8b889ade950b1a826db779abbd5e47
      image: docker.io/kubernetesui/dashboard-api:1.7.0
      imageID: docker.io/kubernetesui/dashboard-api@sha256:60595892c2cf21b7fbd09324120e339e0e44874cd96267bc4712cb86694835f1
      lastState: {}
      name: kubernetes-dashboard-api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:33:45Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zsshx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.205
    podIPs:
    - ip: 172.32.125.205
    qosClass: Burstable
    startTime: "2025-01-28T16:33:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 04119731f36b293bb4179841b760b2deaf2dc6f47e41c8baef649f3668892e75
      cni.projectcalico.org/containerID: de16e40e6ca88374081e8b010d82e01de8165f95605dfebcafc2c3fe968eb58a
      cni.projectcalico.org/podIP: 172.32.125.201/32
      cni.projectcalico.org/podIPs: 172.32.125.201/32
    creationTimestamp: "2025-01-28T16:33:42Z"
    generateName: kubernetes-dashboard-auth-ccfff5767-
    labels:
      app.kubernetes.io/component: auth
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-auth
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.1.3
      helm.sh/chart: kubernetes-dashboard-7.5.0
      pod-template-hash: ccfff5767
    name: kubernetes-dashboard-auth-ccfff5767-mxpbc
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-auth-ccfff5767
      uid: 98e58e0f-3cef-4105-9f23-b5b787965810
    resourceVersion: "405010"
    uid: efc3993e-f7ad-4704-8948-d035eb8fa9b6
  spec:
    automountServiceAccountToken: true
    containers:
    - env:
      - name: CSRF_KEY
        valueFrom:
          secretKeyRef:
            key: private.key
            name: kubernetes-dashboard-csrf
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      image: docker.io/kubernetesui/dashboard-auth:1.1.3
      imagePullPolicy: IfNotPresent
      name: kubernetes-dashboard-auth
      ports:
      - containerPort: 8000
        name: auth
        protocol: TCP
      resources:
        limits:
          cpu: 250m
          memory: 400Mi
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-69zcj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kube-api-access-69zcj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c18691236ae078ab8d6eb604caa4b1d0f7af18c93b5cd642f31a1a1a1250df0f
      image: docker.io/kubernetesui/dashboard-auth:1.1.3
      imageID: docker.io/kubernetesui/dashboard-auth@sha256:07135c09e9ff6faf1370e0b105fa22d38f79e2bc671f248814066630fbf026a1
      lastState: {}
      name: kubernetes-dashboard-auth
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:33:45Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-69zcj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.201
    podIPs:
    - ip: 172.32.125.201
    qosClass: Burstable
    startTime: "2025-01-28T16:33:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: fcba43760c35ed21b2116a95beeecb65979d54262fa6546678ee7ea2111aef04
      cni.projectcalico.org/podIP: 172.32.125.204/32
      cni.projectcalico.org/podIPs: 172.32.125.204/32
      kuma.io/gateway: enabled
      kuma.io/service-account-token-volume: kubernetes-dashboard-kong-token
      traffic.sidecar.istio.io/includeInboundPorts: ""
    creationTimestamp: "2025-01-28T16:33:42Z"
    generateName: kubernetes-dashboard-kong-57d45c4f69-
    labels:
      app: kubernetes-dashboard-kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kong
      app.kubernetes.io/version: "3.6"
      helm.sh/chart: kong-2.38.0
      pod-template-hash: 57d45c4f69
      version: "3.6"
    name: kubernetes-dashboard-kong-57d45c4f69-4zr84
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-kong-57d45c4f69
      uid: 84d09446-f34e-47bb-b9ad-f14b6908ccc1
    resourceVersion: "1484860"
    uid: a7c658c5-6ebf-48c1-b4d2-7e09b02df888
  spec:
    automountServiceAccountToken: false
    containers:
    - env:
      - name: KONG_ADMIN_ACCESS_LOG
        value: /dev/stdout
      - name: KONG_ADMIN_ERROR_LOG
        value: /dev/stderr
      - name: KONG_ADMIN_GUI_ACCESS_LOG
        value: /dev/stdout
      - name: KONG_ADMIN_GUI_ERROR_LOG
        value: /dev/stderr
      - name: KONG_ADMIN_LISTEN
        value: 127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl
      - name: KONG_CLUSTER_LISTEN
        value: "off"
      - name: KONG_DATABASE
        value: "off"
      - name: KONG_DECLARATIVE_CONFIG
        value: /kong_dbless/kong.yml
      - name: KONG_DNS_ORDER
        value: LAST,A,CNAME,AAAA,SRV
      - name: KONG_LUA_PACKAGE_PATH
        value: /opt/?.lua;/opt/?/init.lua;;
      - name: KONG_NGINX_WORKER_PROCESSES
        value: "1"
      - name: KONG_PLUGINS
        value: "off"
      - name: KONG_PORTAL_API_ACCESS_LOG
        value: /dev/stdout
      - name: KONG_PORTAL_API_ERROR_LOG
        value: /dev/stderr
      - name: KONG_PORT_MAPS
        value: 443:8443
      - name: KONG_PREFIX
        value: /kong_prefix/
      - name: KONG_PROXY_ACCESS_LOG
        value: /dev/stdout
      - name: KONG_PROXY_ERROR_LOG
        value: /dev/stderr
      - name: KONG_PROXY_LISTEN
        value: 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl
      - name: KONG_PROXY_STREAM_ACCESS_LOG
        value: /dev/stdout basic
      - name: KONG_PROXY_STREAM_ERROR_LOG
        value: /dev/stderr
      - name: KONG_ROUTER_FLAVOR
        value: traditional
      - name: KONG_STATUS_ACCESS_LOG
        value: "off"
      - name: KONG_STATUS_ERROR_LOG
        value: /dev/stderr
      - name: KONG_STATUS_LISTEN
        value: 0.0.0.0:8100, [::]:8100
      - name: KONG_STREAM_LISTEN
        value: "off"
      - name: KONG_NGINX_DAEMON
        value: "off"
      image: kong:3.6
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - kong
            - quit
            - --wait=15
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /status
          port: status
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: proxy
      ports:
      - containerPort: 8443
        name: proxy-tls
        protocol: TCP
      - containerPort: 8100
        name: status
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /status/ready
          port: status
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /kong_prefix/
        name: kubernetes-dashboard-kong-prefix-dir
      - mountPath: /tmp
        name: kubernetes-dashboard-kong-tmp
      - mountPath: /kong_dbless/
        name: kong-custom-dbless-config-volume
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - rm
      - -vrf
      - $KONG_PREFIX/pids
      env:
      - name: KONG_ADMIN_ACCESS_LOG
        value: /dev/stdout
      - name: KONG_ADMIN_ERROR_LOG
        value: /dev/stderr
      - name: KONG_ADMIN_GUI_ACCESS_LOG
        value: /dev/stdout
      - name: KONG_ADMIN_GUI_ERROR_LOG
        value: /dev/stderr
      - name: KONG_ADMIN_LISTEN
        value: 127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl
      - name: KONG_CLUSTER_LISTEN
        value: "off"
      - name: KONG_DATABASE
        value: "off"
      - name: KONG_DECLARATIVE_CONFIG
        value: /kong_dbless/kong.yml
      - name: KONG_DNS_ORDER
        value: LAST,A,CNAME,AAAA,SRV
      - name: KONG_LUA_PACKAGE_PATH
        value: /opt/?.lua;/opt/?/init.lua;;
      - name: KONG_NGINX_WORKER_PROCESSES
        value: "1"
      - name: KONG_PLUGINS
        value: "off"
      - name: KONG_PORTAL_API_ACCESS_LOG
        value: /dev/stdout
      - name: KONG_PORTAL_API_ERROR_LOG
        value: /dev/stderr
      - name: KONG_PORT_MAPS
        value: 443:8443
      - name: KONG_PREFIX
        value: /kong_prefix/
      - name: KONG_PROXY_ACCESS_LOG
        value: /dev/stdout
      - name: KONG_PROXY_ERROR_LOG
        value: /dev/stderr
      - name: KONG_PROXY_LISTEN
        value: 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl
      - name: KONG_PROXY_STREAM_ACCESS_LOG
        value: /dev/stdout basic
      - name: KONG_PROXY_STREAM_ERROR_LOG
        value: /dev/stderr
      - name: KONG_ROUTER_FLAVOR
        value: traditional
      - name: KONG_STATUS_ACCESS_LOG
        value: "off"
      - name: KONG_STATUS_ERROR_LOG
        value: /dev/stderr
      - name: KONG_STATUS_LISTEN
        value: 0.0.0.0:8100, [::]:8100
      - name: KONG_STREAM_LISTEN
        value: "off"
      image: kong:3.6
      imagePullPolicy: IfNotPresent
      name: clear-stale-pid
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /kong_prefix/
        name: kubernetes-dashboard-kong-prefix-dir
      - mountPath: /tmp
        name: kubernetes-dashboard-kong-tmp
      - mountPath: /kong_dbless/
        name: kong-custom-dbless-config-volume
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard-kong
    serviceAccountName: kubernetes-dashboard-kong
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        sizeLimit: 256Mi
      name: kubernetes-dashboard-kong-prefix-dir
    - emptyDir:
        sizeLimit: 1Gi
      name: kubernetes-dashboard-kong-tmp
    - name: kubernetes-dashboard-kong-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - configMap:
        defaultMode: 420
        name: kong-dbless-config
      name: kong-custom-dbless-config-volume
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:03:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T03:03:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ac76a86b5fa341a193468e291a2d4cd2d71495ef4e28f7cf651eddc0852d8f26
      image: docker.io/library/kong:3.6
      imageID: docker.io/library/kong@sha256:611e2c550ad4e97c14c3ff781cb69aff95d89673ccf6b9b3c8b2ca5eafca3f38
      lastState: {}
      name: proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:33:46Z"
      volumeMounts:
      - mountPath: /kong_prefix/
        name: kubernetes-dashboard-kong-prefix-dir
      - mountPath: /tmp
        name: kubernetes-dashboard-kong-tmp
      - mountPath: /kong_dbless/
        name: kong-custom-dbless-config-volume
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    initContainerStatuses:
    - containerID: containerd://a62082027eef1e778b107952e4758d769b052df81c33b1d03d61f718b38f73b0
      image: docker.io/library/kong:3.6
      imageID: docker.io/library/kong@sha256:611e2c550ad4e97c14c3ff781cb69aff95d89673ccf6b9b3c8b2ca5eafca3f38
      lastState: {}
      name: clear-stale-pid
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a62082027eef1e778b107952e4758d769b052df81c33b1d03d61f718b38f73b0
          exitCode: 0
          finishedAt: "2025-01-28T16:33:45Z"
          reason: Completed
          startedAt: "2025-01-28T16:33:45Z"
      volumeMounts:
      - mountPath: /kong_prefix/
        name: kubernetes-dashboard-kong-prefix-dir
      - mountPath: /tmp
        name: kubernetes-dashboard-kong-tmp
      - mountPath: /kong_dbless/
        name: kong-custom-dbless-config-volume
    phase: Running
    podIP: 172.32.125.204
    podIPs:
    - ip: 172.32.125.204
    qosClass: BestEffort
    startTime: "2025-01-28T16:33:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 2e8f309a2e1d40e0d52e70c5e6529e64e2568c3f0e23c273bc3b5cb67b7eb122
      cni.projectcalico.org/podIP: 172.32.125.202/32
      cni.projectcalico.org/podIPs: 172.32.125.202/32
    creationTimestamp: "2025-01-28T16:33:42Z"
    generateName: kubernetes-dashboard-metrics-scraper-57cf4c69b6-
    labels:
      app.kubernetes.io/component: metrics-scraper
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.1.1
      helm.sh/chart: kubernetes-dashboard-7.5.0
      pod-template-hash: 57cf4c69b6
    name: kubernetes-dashboard-metrics-scraper-57cf4c69b6-s2qd5
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-metrics-scraper-57cf4c69b6
      uid: 483c7470-10d8-4ce0-aef0-30163af01d1d
    resourceVersion: "405005"
    uid: 16df5c04-00ed-43e9-843e-44bc35990f99
  spec:
    automountServiceAccountToken: true
    containers:
    - env:
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      image: docker.io/kubernetesui/dashboard-metrics-scraper:1.1.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: kubernetes-dashboard-metrics-scraper
      ports:
      - containerPort: 8000
        protocol: TCP
      resources:
        limits:
          cpu: 250m
          memory: 400Mi
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9vkd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kubernetes-dashboard-metrics-scraper
    serviceAccountName: kubernetes-dashboard-metrics-scraper
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kube-api-access-w9vkd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f93f071bc604762b329d391567a039dd75364e82d5bb630ab90a54f7f72129b1
      image: docker.io/kubernetesui/dashboard-metrics-scraper:1.1.1
      imageID: docker.io/kubernetesui/dashboard-metrics-scraper@sha256:7747d363c9fee7392597a683c2853a2052710d620ada0e2323561bb0f4d32b4f
      lastState: {}
      name: kubernetes-dashboard-metrics-scraper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:33:45Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9vkd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.202
    podIPs:
    - ip: 172.32.125.202
    qosClass: Burstable
    startTime: "2025-01-28T16:33:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 11c7f8f693265de69466f499a2c26ca834cedc85a2b315f17165b2638297bf24
      cni.projectcalico.org/podIP: 172.32.125.206/32
      cni.projectcalico.org/podIPs: 172.32.125.206/32
    creationTimestamp: "2025-01-28T16:33:42Z"
    generateName: kubernetes-dashboard-web-7458b6d977-
    labels:
      app.kubernetes.io/component: web
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-web
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.4.0
      helm.sh/chart: kubernetes-dashboard-7.5.0
      pod-template-hash: 7458b6d977
    name: kubernetes-dashboard-web-7458b6d977-q6qt8
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-web-7458b6d977
      uid: ecb9ee79-7790-48c9-b445-1b052e033bf5
    resourceVersion: "405015"
    uid: af437197-c31a-402f-bbc6-c680b8ea7db1
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --namespace=kubernetes-dashboard
      - --settings-config-map-name=kubernetes-dashboard-web-settings
      env:
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      image: docker.io/kubernetesui/dashboard-web:1.4.0
      imagePullPolicy: IfNotPresent
      name: kubernetes-dashboard-web
      ports:
      - containerPort: 8000
        name: web
        protocol: TCP
      resources:
        limits:
          cpu: 250m
          memory: 400Mi
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tcq5d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kubernetes-dashboard-web
    serviceAccountName: kubernetes-dashboard-web
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kube-api-access-tcq5d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dd18425b3811a655ca2ff4c1359edccd82d8b515e231eb821cf46baa6aac73aa
      image: docker.io/kubernetesui/dashboard-web:1.4.0
      imageID: docker.io/kubernetesui/dashboard-web@sha256:4445b31a2c25c875e2df8ca103a8e3f3275778d10065c7c011f6ca42cd4bec5f
      lastState: {}
      name: kubernetes-dashboard-web
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:33:45Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tcq5d
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.206
    podIPs:
    - ip: 172.32.125.206
    qosClass: Burstable
    startTime: "2025-01-28T16:33:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 6b7a1e9dcb17f3ed759a41b816a873098c970208a7edf4e081c5c930878d42d6
      cni.projectcalico.org/podIP: 172.32.125.203/32
      cni.projectcalico.org/podIPs: 172.32.125.203/32
    creationTimestamp: "2025-01-28T16:33:42Z"
    generateName: grafana-f7b7d98db-
    labels:
      app: grafana
      pod-template-hash: f7b7d98db
    name: grafana-f7b7d98db-2pk84
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: grafana-f7b7d98db
      uid: d9bb479c-7556-47bb-895e-216e6d492ddc
    resourceVersion: "405097"
    uid: 5bb36c3d-5f09-4118-8967-268852533feb
  spec:
    containers:
    - image: grafana/grafana:latest
      imagePullPolicy: Always
      name: grafana
      ports:
      - containerPort: 3000
        name: grafana
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 500M
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/grafana
        name: grafana-storage
      - mountPath: /etc/grafana/provisioning/datasources
        name: grafana-datasources
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rs92r
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: grafana-storage
    - configMap:
        defaultMode: 420
        name: grafana-datasources
      name: grafana-datasources
    - name: kube-api-access-rs92r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:34:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:34:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:34:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://66468a0b540308601169de1303f4289c8a98f2a6aa943c31afdacc6761417714
      image: docker.io/grafana/grafana:latest
      imageID: docker.io/grafana/grafana@sha256:0a2874cf39c6487093c682215f7c7903ed8646d78ae5f911af945d2dfcc0a447
      lastState: {}
      name: grafana
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:34:20Z"
      volumeMounts:
      - mountPath: /var/lib/grafana
        name: grafana-storage
      - mountPath: /etc/grafana/provisioning/datasources
        name: grafana-datasources
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rs92r
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.203
    podIPs:
    - ip: 172.32.125.203
    qosClass: Burstable
    startTime: "2025-01-28T16:33:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4ac43fe862c711c89c9b08608426f608dde2a43a9138bb60fc2fbfa36cdcea18
      cni.projectcalico.org/podIP: 172.32.125.200/32
      cni.projectcalico.org/podIPs: 172.32.125.200/32
    creationTimestamp: "2025-01-28T16:33:42Z"
    generateName: prometheus-deployment-6869656f4f-
    labels:
      app: prometheus-server
      pod-template-hash: 6869656f4f
    name: prometheus-deployment-6869656f4f-rtf4m
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-deployment-6869656f4f
      uid: 5f548b80-17c2-4b92-8ad4-450732900bcd
    resourceVersion: "405059"
    uid: d792e972-18d8-46fb-a5c0-2712195137f8
  spec:
    containers:
    - args:
      - --storage.tsdb.retention.time=12h
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus/
      image: prom/prometheus
      imagePullPolicy: Always
      name: prometheus
      ports:
      - containerPort: 9090
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 500M
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/prometheus/
        name: prometheus-config-volume
      - mountPath: /prometheus/
        name: prometheus-storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6fs2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-node-1.dsmstc.tech
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: prometheus-server-conf
      name: prometheus-config-volume
    - emptyDir: {}
      name: prometheus-storage-volume
    - name: kube-api-access-l6fs2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-28T16:33:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://eb1055d375d8618ce944345947393eef5c7e22b5174d013356b829454ed63662
      image: docker.io/prom/prometheus:latest
      imageID: docker.io/prom/prometheus@sha256:6559acbd5d770b15bb3c954629ce190ac3cbbdb2b7f1c30f0385c4e05104e218
      lastState: {}
      name: prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-28T16:33:57Z"
      volumeMounts:
      - mountPath: /etc/prometheus/
        name: prometheus-config-volume
      - mountPath: /prometheus/
        name: prometheus-storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6fs2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.11.210
    hostIPs:
    - ip: 192.168.11.210
    phase: Running
    podIP: 172.32.125.200
    podIPs:
    - ip: 172.32.125.200
    qosClass: Burstable
    startTime: "2025-01-28T16:33:44Z"
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ReplicationController","metadata":{"annotations":{},"labels":{"component":"rabbitmq"},"name":"rabbitmq-controller","namespace":"crawler-apps"},"spec":{"replicas":1,"template":{"metadata":{"labels":{"app":"taskQueue","component":"rabbitmq"}},"spec":{"containers":[{"image":"rabbitmq","name":"rabbitmq","ports":[{"containerPort":5672}]}]}}}}
    creationTimestamp: "2025-02-07T03:33:21Z"
    generation: 1
    labels:
      component: rabbitmq
    name: rabbitmq-controller
    namespace: crawler-apps
    resourceVersion: "1487856"
    uid: a74c533c-fca1-4ed0-b2d7-eba60c506ed2
  spec:
    replicas: 1
    selector:
      app: taskQueue
      component: rabbitmq
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: taskQueue
          component: rabbitmq
      spec:
        containers:
        - image: rabbitmq
          imagePullPolicy: Always
          name: rabbitmq
          ports:
          - containerPort: 5672
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"component":"api"},"name":"api-service","namespace":"crawler-apps"},"spec":{"ports":[{"port":80}],"selector":{"app":"taskQueue","component":"api"},"type":"ClusterIP"}}
    creationTimestamp: "2025-02-07T03:34:05Z"
    labels:
      component: api
    name: api-service
    namespace: crawler-apps
    resourceVersion: "1487515"
    uid: 04bbf707-cac7-4a7e-bbb6-a0e138ba7b80
  spec:
    clusterIP: 10.110.195.185
    clusterIPs:
    - 10.110.195.185
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: taskQueue
      component: api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"component":"rabbitmq"},"name":"rabbitmq-service","namespace":"crawler-apps"},"spec":{"ports":[{"port":5672}],"selector":{"app":"taskQueue","component":"rabbitmq"}}}
    creationTimestamp: "2025-02-07T03:33:35Z"
    labels:
      component: rabbitmq
    name: rabbitmq-service
    namespace: crawler-apps
    resourceVersion: "1487470"
    uid: 4d20c83e-0ad8-4d53-85b8-467ae57e200d
  spec:
    clusterIP: 10.107.193.150
    clusterIPs:
    - 10.107.193.150
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 5672
      protocol: TCP
      targetPort: 5672
    selector:
      app: taskQueue
      component: rabbitmq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-09-09T09:12:11Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "193"
    uid: 522b8783-6c84-4ad7-9cb8-f09320f86119
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-09-09T09:12:20Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "287"
    uid: 94068c0d-88a2-4c25-a297-b64d6cd8cd6c
  spec:
    clusterIP: 10.96.0.10
    clusterIPs:
    - 10.96.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-state-metrics
      meta.helm.sh/release-namespace: kube-system
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-02-07T09:25:05Z"
    labels:
      app.kubernetes.io/instance: kube-state-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      helm.sh/chart: kube-state-metrics-2.13.3
    name: kube-state-metrics
    namespace: kube-system
    resourceVersion: "1519133"
    uid: 5f68214f-2c2e-4289-b5ca-a96c22fb40a2
  spec:
    clusterIP: 10.97.52.218
    clusterIPs:
    - 10.97.52.218
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/instance: kube-state-metrics
      app.kubernetes.io/name: kube-state-metrics
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-api
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.7.0
      helm.sh/chart: kubernetes-dashboard-7.5.0
    name: kubernetes-dashboard-api
    namespace: kubernetes-dashboard
    resourceVersion: "4335"
    uid: d65ba9a2-18ed-458f-8b35-086a50cafdeb
  spec:
    clusterIP: 10.105.158.216
    clusterIPs:
    - 10.105.158.216
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: api
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-api
      app.kubernetes.io/part-of: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    labels:
      app.kubernetes.io/component: auth
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-auth
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.1.3
      helm.sh/chart: kubernetes-dashboard-7.5.0
    name: kubernetes-dashboard-auth
    namespace: kubernetes-dashboard
    resourceVersion: "4327"
    uid: 9c5893cc-0a1e-4eda-9b20-81dc6fe80081
  spec:
    clusterIP: 10.99.127.242
    clusterIPs:
    - 10.99.127.242
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: auth
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-auth
      app.kubernetes.io/part-of: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    labels:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kong
      app.kubernetes.io/version: "3.6"
      helm.sh/chart: kong-2.38.0
    name: kubernetes-dashboard-kong-manager
    namespace: kubernetes-dashboard
    resourceVersion: "4316"
    uid: 6f76842d-f249-4592-947c-3f4f886bb8f1
  spec:
    clusterIP: 10.96.197.71
    clusterIPs:
    - 10.96.197.71
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: kong-manager
      nodePort: 30115
      port: 8002
      protocol: TCP
      targetPort: 8002
    - name: kong-manager-tls
      nodePort: 30139
      port: 8445
      protocol: TCP
      targetPort: 8445
    selector:
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kong
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    labels:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kong
      app.kubernetes.io/version: "3.6"
      enable-metrics: "true"
      helm.sh/chart: kong-2.38.0
    name: kubernetes-dashboard-kong-proxy
    namespace: kubernetes-dashboard
    resourceVersion: "4331"
    uid: cd788d0c-c373-46ec-8651-88da3922852c
  spec:
    clusterIP: 10.105.242.199
    clusterIPs:
    - 10.105.242.199
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: kong-proxy-tls
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kong
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    labels:
      app.kubernetes.io/component: metrics-scraper
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.1.1
      helm.sh/chart: kubernetes-dashboard-7.5.0
    name: kubernetes-dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "4323"
    uid: f0c0b4c4-04ae-4b89-b59e-3e16a68a2cb8
  spec:
    clusterIP: 10.108.203.193
    clusterIPs:
    - 10.108.203.193
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
      app.kubernetes.io/part-of: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    labels:
      app.kubernetes.io/component: web
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-web
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.4.0
      helm.sh/chart: kubernetes-dashboard-7.5.0
    name: kubernetes-dashboard-web
    namespace: kubernetes-dashboard
    resourceVersion: "4317"
    uid: e46570f8-ead8-4838-ac6d-0db9c48d6bbb
  spec:
    clusterIP: 10.106.3.16
    clusterIPs:
    - 10.106.3.16
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: web
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-web
      app.kubernetes.io/part-of: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "3000"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-09-09T10:47:34Z"
    name: grafana
    namespace: monitoring
    resourceVersion: "8648"
    uid: 355f74f2-629b-46d4-87d4-afe4c9986d7f
  spec:
    clusterIP: 10.100.248.60
    clusterIPs:
    - 10.100.248.60
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30443
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: grafana
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9090"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-09-09T10:47:22Z"
    name: prometheus-service
    namespace: monitoring
    resourceVersion: "8625"
    uid: 001aa2db-f3ba-4888-9d0b-fbdaaaab1a1c
  spec:
    clusterIP: 10.100.79.17
    clusterIPs:
    - 10.100.79.17
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31443
      port: 8080
      protocol: TCP
      targetPort: 9090
    selector:
      app: prometheus-server
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"k8s-app":"calico-node"},"name":"calico-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"calico-node"}},"template":{"metadata":{"labels":{"k8s-app":"calico-node"}},"spec":{"containers":[{"env":[{"name":"DATASTORE_TYPE","value":"kubernetes"},{"name":"WAIT_FOR_DATASTORE","value":"true"},{"name":"NODENAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"CALICO_NETWORKING_BACKEND","valueFrom":{"configMapKeyRef":{"key":"calico_backend","name":"calico-config"}}},{"name":"CLUSTER_TYPE","value":"k8s,bgp"},{"name":"IP","value":"autodetect"},{"name":"CALICO_IPV4POOL_IPIP","value":"Always"},{"name":"CALICO_IPV4POOL_VXLAN","value":"Never"},{"name":"CALICO_IPV6POOL_VXLAN","value":"Never"},{"name":"FELIX_IPINIPMTU","valueFrom":{"configMapKeyRef":{"key":"veth_mtu","name":"calico-config"}}},{"name":"FELIX_VXLANMTU","valueFrom":{"configMapKeyRef":{"key":"veth_mtu","name":"calico-config"}}},{"name":"FELIX_WIREGUARDMTU","valueFrom":{"configMapKeyRef":{"key":"veth_mtu","name":"calico-config"}}},{"name":"CALICO_DISABLE_FILE_LOGGING","value":"true"},{"name":"FELIX_DEFAULTENDPOINTTOHOSTACTION","value":"ACCEPT"},{"name":"FELIX_IPV6SUPPORT","value":"false"},{"name":"FELIX_HEALTHENABLED","value":"true"}],"envFrom":[{"configMapRef":{"name":"kubernetes-services-endpoint","optional":true}}],"image":"docker.io/calico/node:v3.25.0","imagePullPolicy":"IfNotPresent","lifecycle":{"preStop":{"exec":{"command":["/bin/calico-node","-shutdown"]}}},"livenessProbe":{"exec":{"command":["/bin/calico-node","-felix-live","-bird-live"]},"failureThreshold":6,"initialDelaySeconds":10,"periodSeconds":10,"timeoutSeconds":10},"name":"calico-node","readinessProbe":{"exec":{"command":["/bin/calico-node","-felix-ready","-bird-ready"]},"periodSeconds":10,"timeoutSeconds":10},"resources":{"requests":{"cpu":"250m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/host/etc/cni/net.d","name":"cni-net-dir","readOnly":false},{"mountPath":"/lib/modules","name":"lib-modules","readOnly":true},{"mountPath":"/run/xtables.lock","name":"xtables-lock","readOnly":false},{"mountPath":"/var/run/calico","name":"var-run-calico","readOnly":false},{"mountPath":"/var/lib/calico","name":"var-lib-calico","readOnly":false},{"mountPath":"/var/run/nodeagent","name":"policysync"},{"mountPath":"/sys/fs/bpf","name":"bpffs"},{"mountPath":"/var/log/calico/cni","name":"cni-log-dir","readOnly":true}]}],"hostNetwork":true,"initContainers":[{"command":["/opt/cni/bin/calico-ipam","-upgrade"],"env":[{"name":"KUBERNETES_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"CALICO_NETWORKING_BACKEND","valueFrom":{"configMapKeyRef":{"key":"calico_backend","name":"calico-config"}}}],"envFrom":[{"configMapRef":{"name":"kubernetes-services-endpoint","optional":true}}],"image":"docker.io/calico/cni:v3.25.0","imagePullPolicy":"IfNotPresent","name":"upgrade-ipam","securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/var/lib/cni/networks","name":"host-local-net-dir"},{"mountPath":"/host/opt/cni/bin","name":"cni-bin-dir"}]},{"command":["/opt/cni/bin/install"],"env":[{"name":"CNI_CONF_NAME","value":"10-calico.conflist"},{"name":"CNI_NETWORK_CONFIG","valueFrom":{"configMapKeyRef":{"key":"cni_network_config","name":"calico-config"}}},{"name":"KUBERNETES_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"CNI_MTU","valueFrom":{"configMapKeyRef":{"key":"veth_mtu","name":"calico-config"}}},{"name":"SLEEP","value":"false"}],"envFrom":[{"configMapRef":{"name":"kubernetes-services-endpoint","optional":true}}],"image":"docker.io/calico/cni:v3.25.0","imagePullPolicy":"IfNotPresent","name":"install-cni","securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/host/opt/cni/bin","name":"cni-bin-dir"},{"mountPath":"/host/etc/cni/net.d","name":"cni-net-dir"}]},{"command":["calico-node","-init","-best-effort"],"image":"docker.io/calico/node:v3.25.0","imagePullPolicy":"IfNotPresent","name":"mount-bpffs","securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/sys/fs","mountPropagation":"Bidirectional","name":"sys-fs"},{"mountPath":"/var/run/calico","mountPropagation":"Bidirectional","name":"var-run-calico"},{"mountPath":"/nodeproc","name":"nodeproc","readOnly":true}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-node-critical","serviceAccountName":"calico-node","terminationGracePeriodSeconds":0,"tolerations":[{"effect":"NoSchedule","operator":"Exists"},{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/lib/modules"},"name":"lib-modules"},{"hostPath":{"path":"/var/run/calico"},"name":"var-run-calico"},{"hostPath":{"path":"/var/lib/calico"},"name":"var-lib-calico"},{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"xtables-lock"},{"hostPath":{"path":"/sys/fs/","type":"DirectoryOrCreate"},"name":"sys-fs"},{"hostPath":{"path":"/sys/fs/bpf","type":"Directory"},"name":"bpffs"},{"hostPath":{"path":"/proc"},"name":"nodeproc"},{"hostPath":{"path":"/opt/cni/bin"},"name":"cni-bin-dir"},{"hostPath":{"path":"/etc/cni/net.d"},"name":"cni-net-dir"},{"hostPath":{"path":"/var/log/calico/cni"},"name":"cni-log-dir"},{"hostPath":{"path":"/var/lib/cni/networks"},"name":"host-local-net-dir"},{"hostPath":{"path":"/var/run/nodeagent","type":"DirectoryOrCreate"},"name":"policysync"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"}}}
    creationTimestamp: "2024-09-09T09:21:24Z"
    generation: 1
    labels:
      k8s-app: calico-node
    name: calico-node
    namespace: kube-system
    resourceVersion: "1495633"
    uid: 6bb6fb8d-7e48-4af9-ab16-38adee49e552
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: calico-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: calico-node
      spec:
        containers:
        - env:
          - name: DATASTORE_TYPE
            value: kubernetes
          - name: WAIT_FOR_DATASTORE
            value: "true"
          - name: NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CALICO_NETWORKING_BACKEND
            valueFrom:
              configMapKeyRef:
                key: calico_backend
                name: calico-config
          - name: CLUSTER_TYPE
            value: k8s,bgp
          - name: IP
            value: autodetect
          - name: CALICO_IPV4POOL_IPIP
            value: Always
          - name: CALICO_IPV4POOL_VXLAN
            value: Never
          - name: CALICO_IPV6POOL_VXLAN
            value: Never
          - name: FELIX_IPINIPMTU
            valueFrom:
              configMapKeyRef:
                key: veth_mtu
                name: calico-config
          - name: FELIX_VXLANMTU
            valueFrom:
              configMapKeyRef:
                key: veth_mtu
                name: calico-config
          - name: FELIX_WIREGUARDMTU
            valueFrom:
              configMapKeyRef:
                key: veth_mtu
                name: calico-config
          - name: CALICO_DISABLE_FILE_LOGGING
            value: "true"
          - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
            value: ACCEPT
          - name: FELIX_IPV6SUPPORT
            value: "false"
          - name: FELIX_HEALTHENABLED
            value: "true"
          envFrom:
          - configMapRef:
              name: kubernetes-services-endpoint
              optional: true
          image: docker.io/calico/node:v3.25.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/calico-node
                - -shutdown
          livenessProbe:
            exec:
              command:
              - /bin/calico-node
              - -felix-live
              - -bird-live
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-node
          readinessProbe:
            exec:
              command:
              - /bin/calico-node
              - -felix-ready
              - -bird-ready
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 250m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/run/calico
            name: var-run-calico
          - mountPath: /var/lib/calico
            name: var-lib-calico
          - mountPath: /var/run/nodeagent
            name: policysync
          - mountPath: /sys/fs/bpf
            name: bpffs
          - mountPath: /var/log/calico/cni
            name: cni-log-dir
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /opt/cni/bin/calico-ipam
          - -upgrade
          env:
          - name: KUBERNETES_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CALICO_NETWORKING_BACKEND
            valueFrom:
              configMapKeyRef:
                key: calico_backend
                name: calico-config
          envFrom:
          - configMapRef:
              name: kubernetes-services-endpoint
              optional: true
          image: docker.io/calico/cni:v3.25.0
          imagePullPolicy: IfNotPresent
          name: upgrade-ipam
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/cni/networks
            name: host-local-net-dir
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
        - command:
          - /opt/cni/bin/install
          env:
          - name: CNI_CONF_NAME
            value: 10-calico.conflist
          - name: CNI_NETWORK_CONFIG
            valueFrom:
              configMapKeyRef:
                key: cni_network_config
                name: calico-config
          - name: KUBERNETES_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CNI_MTU
            valueFrom:
              configMapKeyRef:
                key: veth_mtu
                name: calico-config
          - name: SLEEP
            value: "false"
          envFrom:
          - configMapRef:
              name: kubernetes-services-endpoint
              optional: true
          image: docker.io/calico/cni:v3.25.0
          imagePullPolicy: IfNotPresent
          name: install-cni
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
        - command:
          - calico-node
          - -init
          - -best-effort
          image: docker.io/calico/node:v3.25.0
          imagePullPolicy: IfNotPresent
          name: mount-bpffs
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs
            mountPropagation: Bidirectional
            name: sys-fs
          - mountPath: /var/run/calico
            mountPropagation: Bidirectional
            name: var-run-calico
          - mountPath: /nodeproc
            name: nodeproc
            readOnly: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-node
        serviceAccountName: calico-node
        terminationGracePeriodSeconds: 0
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        volumes:
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - hostPath:
            path: /var/run/calico
            type: ""
          name: var-run-calico
        - hostPath:
            path: /var/lib/calico
            type: ""
          name: var-lib-calico
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /sys/fs/
            type: DirectoryOrCreate
          name: sys-fs
        - hostPath:
            path: /sys/fs/bpf
            type: Directory
          name: bpffs
        - hostPath:
            path: /proc
            type: ""
          name: nodeproc
        - hostPath:
            path: /opt/cni/bin
            type: ""
          name: cni-bin-dir
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-net-dir
        - hostPath:
            path: /var/log/calico/cni
            type: ""
          name: cni-log-dir
        - hostPath:
            path: /var/lib/cni/networks
            type: ""
          name: host-local-net-dir
        - hostPath:
            path: /var/run/nodeagent
            type: DirectoryOrCreate
          name: policysync
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2024-09-09T09:12:20Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "1495016"
    uid: 2fcbbad2-7572-4a4c-802f-cfe9eea7dd4b
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: registry.k8s.io/kube-proxy:v1.31.0
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"component":"api"},"name":"fb-api","namespace":"crawler-apps"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"taskQueue","component":"api"}},"template":{"metadata":{"labels":{"app":"taskQueue","component":"api"}},"spec":{"containers":[{"env":[{"name":"FBS_DATABASE_POSTGRESQL_SERVICE_HOST","value":"postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs"},{"name":"FBS_DATABASE_POSTGRESQL_SLAVE_SERVICE_HOST","value":"postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs"}],"image":"mglue/fb-api:latest","name":"api","ports":[{"containerPort":80}],"resources":{"limits":{"cpu":"100m","memory":"300Mi"},"requests":{"cpu":"50m","memory":"150Mi"}}}]}}}}
    creationTimestamp: "2025-02-07T03:32:34Z"
    generation: 1
    labels:
      component: api
    name: fb-api
    namespace: crawler-apps
    resourceVersion: "1495470"
    uid: 688e0e58-87d1-4a58-82ca-c7f6c9d79ae2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: taskQueue
        component: api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: taskQueue
          component: api
      spec:
        containers:
        - env:
          - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
            value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
          - name: FBS_DATABASE_POSTGRESQL_SLAVE_SERVICE_HOST
            value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
          image: mglue/fb-api:latest
          imagePullPolicy: Always
          name: api
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 50m
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-02-07T03:32:34Z"
      lastUpdateTime: "2025-02-07T03:33:06Z"
      message: ReplicaSet "fb-api-6ddb6b4475" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-02-07T04:52:53Z"
      lastUpdateTime: "2025-02-07T04:52:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"component":"producer"},"name":"fb-producer","namespace":"crawler-apps"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"taskQueue","component":"producer"}},"template":{"metadata":{"labels":{"app":"taskQueue","component":"producer"}},"spec":{"containers":[{"env":[{"name":"FBS_DATABASE_POSTGRESQL_SERVICE_HOST","value":"postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs"}],"image":"mglue/fb-producer:latest","name":"producer","ports":[{"containerPort":80}],"resources":{"limits":{"cpu":"100m","memory":"128Mi"},"requests":{"cpu":"50m","memory":"64Mi"}}}]}}}}
    creationTimestamp: "2025-02-07T03:32:45Z"
    generation: 2
    labels:
      component: producer
    name: fb-producer
    namespace: crawler-apps
    resourceVersion: "1490433"
    uid: 0588cf3e-65e5-4ae9-a697-1bc6925a418b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: taskQueue
        component: producer
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-02-07T04:07:39Z"
        creationTimestamp: null
        labels:
          app: taskQueue
          component: producer
      spec:
        containers:
        - env:
          - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
            value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
          image: mglue/fb-producer:latest
          imagePullPolicy: Always
          name: producer
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-02-07T04:08:21Z"
      lastUpdateTime: "2025-02-07T04:08:21Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-02-07T03:32:45Z"
      lastUpdateTime: "2025-02-07T04:08:21Z"
      message: ReplicaSet "fb-producer-86b69b56c8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"component":"worker"},"name":"fb-worker","namespace":"crawler-apps"},"spec":{"replicas":10,"selector":{"matchLabels":{"app":"taskQueue","component":"worker"}},"template":{"metadata":{"labels":{"app":"taskQueue","component":"worker"}},"spec":{"containers":[{"command":["bash","-c","nohup node ./proxy/proxy.js \u003e ./proxy/log \u0026 /usr/local/bin/celery -A app worker --loglevel=info --concurrency=1 --max-tasks-per-child=1"],"env":[{"name":"FBS_DATABASE_POSTGRESQL_SERVICE_HOST","value":"postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs"}],"image":"registry.gitlab.com/thantzawlyn/fb_worker_update/main","name":"worker","resources":{"limits":{"cpu":"500m","memory":"1200Mi"},"requests":{"cpu":"300m","memory":"512Mi"}}}]}}}}
    creationTimestamp: "2025-02-07T03:33:03Z"
    generation: 2
    labels:
      component: worker
    name: fb-worker
    namespace: crawler-apps
    resourceVersion: "1526069"
    uid: 47c18eaa-ce13-4e61-aeac-999559dba941
  spec:
    progressDeadlineSeconds: 600
    replicas: 30
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: taskQueue
        component: worker
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: taskQueue
          component: worker
      spec:
        containers:
        - command:
          - bash
          - -c
          - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app
            worker --loglevel=info --concurrency=1 --max-tasks-per-child=1
          env:
          - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
            value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
          image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
          imagePullPolicy: Always
          name: worker
          resources:
            limits:
              cpu: 500m
              memory: 1200Mi
            requests:
              cpu: 300m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 30
    conditions:
    - lastTransitionTime: "2025-02-07T03:33:03Z"
      lastUpdateTime: "2025-02-07T03:34:38Z"
      message: ReplicaSet "fb-worker-7776484bf7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-02-07T04:52:29Z"
      lastUpdateTime: "2025-02-07T04:52:29Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 30
    replicas: 30
    updatedReplicas: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"calico-kube-controllers"},"name":"calico-kube-controllers","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"calico-kube-controllers"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"k8s-app":"calico-kube-controllers"},"name":"calico-kube-controllers","namespace":"kube-system"},"spec":{"containers":[{"env":[{"name":"ENABLED_CONTROLLERS","value":"node"},{"name":"DATASTORE_TYPE","value":"kubernetes"}],"image":"docker.io/calico/kube-controllers:v3.25.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/usr/bin/check-status","-l"]},"failureThreshold":6,"initialDelaySeconds":10,"periodSeconds":10,"timeoutSeconds":10},"name":"calico-kube-controllers","readinessProbe":{"exec":{"command":["/usr/bin/check-status","-r"]},"periodSeconds":10}}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","serviceAccountName":"calico-kube-controllers","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane"}]}}}}
    creationTimestamp: "2024-09-09T09:21:24Z"
    generation: 1
    labels:
      k8s-app: calico-kube-controllers
    name: calico-kube-controllers
    namespace: kube-system
    resourceVersion: "404348"
    uid: a9396e62-fa34-40a2-b924-c9c1d0424a24
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: calico-kube-controllers
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: calico-kube-controllers
        name: calico-kube-controllers
        namespace: kube-system
      spec:
        containers:
        - env:
          - name: ENABLED_CONTROLLERS
            value: node
          - name: DATASTORE_TYPE
            value: kubernetes
          image: docker.io/calico/kube-controllers:v3.25.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -l
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-kube-controllers
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-kube-controllers
        serviceAccountName: calico-kube-controllers
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-09-09T09:21:24Z"
      lastUpdateTime: "2024-09-09T09:21:51Z"
      message: ReplicaSet "calico-kube-controllers-6879d4fcdc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-01-28T16:27:44Z"
      lastUpdateTime: "2025-01-28T16:27:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2024-09-09T09:12:20Z"
    generation: 2
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "1520657"
    uid: b45ad31c-4de0-4047-9303-dc0b5e5c0ebd
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-02-07T09:30:01Z"
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-01-28T16:27:44Z"
      lastUpdateTime: "2025-01-28T16:27:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-09-09T09:12:20Z"
      lastUpdateTime: "2025-02-07T09:30:14Z"
      message: ReplicaSet "coredns-85555666d5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kube-state-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-02-07T09:25:05Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: kube-state-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/version: 1.9.8
      helm.sh/chart: kube-state-metrics-2.13.3
    name: kube-state-metrics
    namespace: kube-system
    resourceVersion: "1519194"
    uid: d8ee581f-dd28-4cbb-9b20-f0cb40761c4d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: kube-state-metrics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: kube-state-metrics
          app.kubernetes.io/name: kube-state-metrics
      spec:
        containers:
        - args:
          - --collectors=certificatesigningrequests
          - --collectors=configmaps
          - --collectors=cronjobs
          - --collectors=daemonsets
          - --collectors=deployments
          - --collectors=endpoints
          - --collectors=horizontalpodautoscalers
          - --collectors=ingresses
          - --collectors=jobs
          - --collectors=limitranges
          - --collectors=mutatingwebhookconfigurations
          - --collectors=namespaces
          - --collectors=networkpolicies
          - --collectors=nodes
          - --collectors=persistentvolumeclaims
          - --collectors=persistentvolumes
          - --collectors=poddisruptionbudgets
          - --collectors=pods
          - --collectors=replicasets
          - --collectors=replicationcontrollers
          - --collectors=resourcequotas
          - --collectors=secrets
          - --collectors=services
          - --collectors=statefulsets
          - --collectors=storageclasses
          - --collectors=validatingwebhookconfigurations
          - --collectors=volumeattachments
          - --telemetry-port=8081
          image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v1.9.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsUser: 65534
        serviceAccount: kube-state-metrics
        serviceAccountName: kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-02-07T09:25:29Z"
      lastUpdateTime: "2025-02-07T09:25:29Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-02-07T09:25:05Z"
      lastUpdateTime: "2025-02-07T09:25:29Z"
      message: ReplicaSet "kube-state-metrics-6b5955fdf5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-api
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.7.0
      helm.sh/chart: kubernetes-dashboard-7.5.0
    name: kubernetes-dashboard-api
    namespace: kubernetes-dashboard
    resourceVersion: "405030"
    uid: a608cf1e-9ff1-49c6-85c7-f75031f6245e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/name: kubernetes-dashboard-api
        app.kubernetes.io/part-of: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: f1b95ba3b88bb6e088f3fc4ba4cf4f28452bddbde5352a5c6130a9117cc9e3c9
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: api
          app.kubernetes.io/instance: kubernetes-dashboard
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kubernetes-dashboard-api
          app.kubernetes.io/part-of: kubernetes-dashboard
          app.kubernetes.io/version: 1.7.0
          helm.sh/chart: kubernetes-dashboard-7.5.0
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --namespace=kubernetes-dashboard
          - --metrics-scraper-service-name=kubernetes-dashboard-metrics-scraper
          env:
          - name: CSRF_KEY
            valueFrom:
              secretKeyRef:
                key: private.key
                name: kubernetes-dashboard-csrf
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.memory
          image: docker.io/kubernetesui/dashboard-api:1.7.0
          imagePullPolicy: IfNotPresent
          name: kubernetes-dashboard-api
          ports:
          - containerPort: 8000
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: kubernetes-dashboard-api
        serviceAccountName: kubernetes-dashboard-api
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-09-09T09:57:33Z"
      lastUpdateTime: "2024-09-09T09:57:35Z"
      message: ReplicaSet "kubernetes-dashboard-api-78c496b88f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-01-28T16:33:44Z"
      lastUpdateTime: "2025-01-28T16:33:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: auth
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-auth
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.7.0
      helm.sh/chart: kubernetes-dashboard-7.5.0
    name: kubernetes-dashboard-auth
    namespace: kubernetes-dashboard
    resourceVersion: "405016"
    uid: ff1a8921-1b3a-4d41-bf64-2cc705487686
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/name: kubernetes-dashboard-auth
        app.kubernetes.io/part-of: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 04119731f36b293bb4179841b760b2deaf2dc6f47e41c8baef649f3668892e75
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: auth
          app.kubernetes.io/instance: kubernetes-dashboard
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kubernetes-dashboard-auth
          app.kubernetes.io/part-of: kubernetes-dashboard
          app.kubernetes.io/version: 1.1.3
          helm.sh/chart: kubernetes-dashboard-7.5.0
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: CSRF_KEY
            valueFrom:
              secretKeyRef:
                key: private.key
                name: kubernetes-dashboard-csrf
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.memory
          image: docker.io/kubernetesui/dashboard-auth:1.1.3
          imagePullPolicy: IfNotPresent
          name: kubernetes-dashboard-auth
          ports:
          - containerPort: 8000
            name: auth
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-09-09T09:57:33Z"
      lastUpdateTime: "2024-09-09T09:57:35Z"
      message: ReplicaSet "kubernetes-dashboard-auth-ccfff5767" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-01-28T16:33:44Z"
      lastUpdateTime: "2025-01-28T16:33:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kong
      app.kubernetes.io/version: "3.6"
      helm.sh/chart: kong-2.38.0
    name: kubernetes-dashboard-kong
    namespace: kubernetes-dashboard
    resourceVersion: "1484869"
    uid: 2c9aec7a-b590-4aa5-9f7a-138c36c38b04
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: app
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/name: kong
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kuma.io/gateway: enabled
          kuma.io/service-account-token-volume: kubernetes-dashboard-kong-token
          traffic.sidecar.istio.io/includeInboundPorts: ""
        creationTimestamp: null
        labels:
          app: kubernetes-dashboard-kong
          app.kubernetes.io/component: app
          app.kubernetes.io/instance: kubernetes-dashboard
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kong
          app.kubernetes.io/version: "3.6"
          helm.sh/chart: kong-2.38.0
          version: "3.6"
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: KONG_ADMIN_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_ADMIN_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ADMIN_GUI_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_ADMIN_GUI_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ADMIN_LISTEN
            value: 127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl
          - name: KONG_CLUSTER_LISTEN
            value: "off"
          - name: KONG_DATABASE
            value: "off"
          - name: KONG_DECLARATIVE_CONFIG
            value: /kong_dbless/kong.yml
          - name: KONG_DNS_ORDER
            value: LAST,A,CNAME,AAAA,SRV
          - name: KONG_LUA_PACKAGE_PATH
            value: /opt/?.lua;/opt/?/init.lua;;
          - name: KONG_NGINX_WORKER_PROCESSES
            value: "1"
          - name: KONG_PLUGINS
            value: "off"
          - name: KONG_PORTAL_API_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_PORTAL_API_ERROR_LOG
            value: /dev/stderr
          - name: KONG_PORT_MAPS
            value: 443:8443
          - name: KONG_PREFIX
            value: /kong_prefix/
          - name: KONG_PROXY_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_PROXY_ERROR_LOG
            value: /dev/stderr
          - name: KONG_PROXY_LISTEN
            value: 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl
          - name: KONG_PROXY_STREAM_ACCESS_LOG
            value: /dev/stdout basic
          - name: KONG_PROXY_STREAM_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ROUTER_FLAVOR
            value: traditional
          - name: KONG_STATUS_ACCESS_LOG
            value: "off"
          - name: KONG_STATUS_ERROR_LOG
            value: /dev/stderr
          - name: KONG_STATUS_LISTEN
            value: 0.0.0.0:8100, [::]:8100
          - name: KONG_STREAM_LISTEN
            value: "off"
          - name: KONG_NGINX_DAEMON
            value: "off"
          image: kong:3.6
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - kong
                - quit
                - --wait=15
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: status
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: proxy
          ports:
          - containerPort: 8443
            name: proxy-tls
            protocol: TCP
          - containerPort: 8100
            name: status
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /status/ready
              port: status
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kong_prefix/
            name: kubernetes-dashboard-kong-prefix-dir
          - mountPath: /tmp
            name: kubernetes-dashboard-kong-tmp
          - mountPath: /kong_dbless/
            name: kong-custom-dbless-config-volume
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - rm
          - -vrf
          - $KONG_PREFIX/pids
          env:
          - name: KONG_ADMIN_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_ADMIN_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ADMIN_GUI_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_ADMIN_GUI_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ADMIN_LISTEN
            value: 127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl
          - name: KONG_CLUSTER_LISTEN
            value: "off"
          - name: KONG_DATABASE
            value: "off"
          - name: KONG_DECLARATIVE_CONFIG
            value: /kong_dbless/kong.yml
          - name: KONG_DNS_ORDER
            value: LAST,A,CNAME,AAAA,SRV
          - name: KONG_LUA_PACKAGE_PATH
            value: /opt/?.lua;/opt/?/init.lua;;
          - name: KONG_NGINX_WORKER_PROCESSES
            value: "1"
          - name: KONG_PLUGINS
            value: "off"
          - name: KONG_PORTAL_API_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_PORTAL_API_ERROR_LOG
            value: /dev/stderr
          - name: KONG_PORT_MAPS
            value: 443:8443
          - name: KONG_PREFIX
            value: /kong_prefix/
          - name: KONG_PROXY_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_PROXY_ERROR_LOG
            value: /dev/stderr
          - name: KONG_PROXY_LISTEN
            value: 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl
          - name: KONG_PROXY_STREAM_ACCESS_LOG
            value: /dev/stdout basic
          - name: KONG_PROXY_STREAM_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ROUTER_FLAVOR
            value: traditional
          - name: KONG_STATUS_ACCESS_LOG
            value: "off"
          - name: KONG_STATUS_ERROR_LOG
            value: /dev/stderr
          - name: KONG_STATUS_LISTEN
            value: 0.0.0.0:8100, [::]:8100
          - name: KONG_STREAM_LISTEN
            value: "off"
          image: kong:3.6
          imagePullPolicy: IfNotPresent
          name: clear-stale-pid
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kong_prefix/
            name: kubernetes-dashboard-kong-prefix-dir
          - mountPath: /tmp
            name: kubernetes-dashboard-kong-tmp
          - mountPath: /kong_dbless/
            name: kong-custom-dbless-config-volume
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard-kong
        serviceAccountName: kubernetes-dashboard-kong
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            sizeLimit: 256Mi
          name: kubernetes-dashboard-kong-prefix-dir
        - emptyDir:
            sizeLimit: 1Gi
          name: kubernetes-dashboard-kong-tmp
        - name: kubernetes-dashboard-kong-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - configMap:
            defaultMode: 420
            name: kong-dbless-config
          name: kong-custom-dbless-config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-09-09T09:57:33Z"
      lastUpdateTime: "2024-09-09T09:57:43Z"
      message: ReplicaSet "kubernetes-dashboard-kong-57d45c4f69" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-02-07T03:03:40Z"
      lastUpdateTime: "2025-02-07T03:03:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: metrics-scraper
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.1.1
      helm.sh/chart: kubernetes-dashboard-7.5.0
    name: kubernetes-dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "405011"
    uid: 8a918cea-6255-42e8-9272-164d9f74b80f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
        app.kubernetes.io/part-of: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics-scraper
          app.kubernetes.io/instance: kubernetes-dashboard
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
          app.kubernetes.io/part-of: kubernetes-dashboard
          app.kubernetes.io/version: 1.1.1
          helm.sh/chart: kubernetes-dashboard-7.5.0
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.memory
          image: docker.io/kubernetesui/dashboard-metrics-scraper:1.1.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: kubernetes-dashboard-metrics-scraper
        serviceAccountName: kubernetes-dashboard-metrics-scraper
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-09-09T09:57:33Z"
      lastUpdateTime: "2024-09-09T09:57:35Z"
      message: ReplicaSet "kubernetes-dashboard-metrics-scraper-57cf4c69b6" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-01-28T16:33:44Z"
      lastUpdateTime: "2025-01-28T16:33:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: web
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-web
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.4.0
      helm.sh/chart: kubernetes-dashboard-7.5.0
    name: kubernetes-dashboard-web
    namespace: kubernetes-dashboard
    resourceVersion: "405020"
    uid: 1f61eff5-697b-47fc-8d4d-2c36b94b3cbb
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/name: kubernetes-dashboard-web
        app.kubernetes.io/part-of: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: web
          app.kubernetes.io/instance: kubernetes-dashboard
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kubernetes-dashboard-web
          app.kubernetes.io/part-of: kubernetes-dashboard
          app.kubernetes.io/version: 1.4.0
          helm.sh/chart: kubernetes-dashboard-7.5.0
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --namespace=kubernetes-dashboard
          - --settings-config-map-name=kubernetes-dashboard-web-settings
          env:
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.memory
          image: docker.io/kubernetesui/dashboard-web:1.4.0
          imagePullPolicy: IfNotPresent
          name: kubernetes-dashboard-web
          ports:
          - containerPort: 8000
            name: web
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: kubernetes-dashboard-web
        serviceAccountName: kubernetes-dashboard-web
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-09-09T09:57:33Z"
      lastUpdateTime: "2024-09-09T09:57:34Z"
      message: ReplicaSet "kubernetes-dashboard-web-7458b6d977" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-01-28T16:33:44Z"
      lastUpdateTime: "2025-01-28T16:33:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-09-09T10:46:50Z"
    generation: 1
    name: grafana
    namespace: monitoring
    resourceVersion: "405101"
    uid: 18ade1d7-f694-4abe-b2d3-d44320f447b9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: grafana
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: grafana
        name: grafana
      spec:
        containers:
        - image: grafana/grafana:latest
          imagePullPolicy: Always
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 500M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-storage
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-datasources
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: grafana-storage
        - configMap:
            defaultMode: 420
            name: grafana-datasources
          name: grafana-datasources
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-09-09T10:46:50Z"
      lastUpdateTime: "2024-09-09T10:47:01Z"
      message: ReplicaSet "grafana-f7b7d98db" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-01-28T16:34:19Z"
      lastUpdateTime: "2025-01-28T16:34:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-09-09T10:47:16Z"
    generation: 1
    labels:
      app: prometheus-server
    name: prometheus-deployment
    namespace: monitoring
    resourceVersion: "405063"
    uid: 502b3345-cd5d-4970-830b-208faa80fd7d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: prometheus-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: prometheus-server
      spec:
        containers:
        - args:
          - --storage.tsdb.retention.time=12h
          - --config.file=/etc/prometheus/prometheus.yml
          - --storage.tsdb.path=/prometheus/
          image: prom/prometheus
          imagePullPolicy: Always
          name: prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 500M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus/
            name: prometheus-config-volume
          - mountPath: /prometheus/
            name: prometheus-storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server-conf
          name: prometheus-config-volume
        - emptyDir: {}
          name: prometheus-storage-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-09-09T10:47:16Z"
      lastUpdateTime: "2024-09-09T10:47:19Z"
      message: ReplicaSet "prometheus-deployment-6869656f4f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-01-28T16:33:55Z"
      lastUpdateTime: "2025-01-28T16:33:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-02-07T03:32:34Z"
    generation: 1
    labels:
      app: taskQueue
      component: api
      pod-template-hash: 6ddb6b4475
    name: fb-api-6ddb6b4475
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: fb-api
      uid: 688e0e58-87d1-4a58-82ca-c7f6c9d79ae2
    resourceVersion: "1495468"
    uid: bdcf3fac-b337-4a4d-83b4-d58ba0cba2d9
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: taskQueue
        component: api
        pod-template-hash: 6ddb6b4475
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: taskQueue
          component: api
          pod-template-hash: 6ddb6b4475
      spec:
        containers:
        - env:
          - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
            value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
          - name: FBS_DATABASE_POSTGRESQL_SLAVE_SERVICE_HOST
            value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
          image: mglue/fb-api:latest
          imagePullPolicy: Always
          name: api
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 50m
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-02-07T04:07:36Z"
    generation: 1
    labels:
      app: taskQueue
      component: producer
      pod-template-hash: 86b69b56c8
    name: fb-producer-86b69b56c8
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: fb-producer
      uid: 0588cf3e-65e5-4ae9-a697-1bc6925a418b
    resourceVersion: "1490432"
    uid: 94934e4b-302a-4a71-b930-c29f8aebacba
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: taskQueue
        component: producer
        pod-template-hash: 86b69b56c8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-02-07T04:07:39Z"
        creationTimestamp: null
        labels:
          app: taskQueue
          component: producer
          pod-template-hash: 86b69b56c8
      spec:
        containers:
        - env:
          - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
            value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
          image: mglue/fb-producer:latest
          imagePullPolicy: Always
          name: producer
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "30"
      deployment.kubernetes.io/max-replicas: "38"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-02-07T03:33:03Z"
    generation: 2
    labels:
      app: taskQueue
      component: worker
      pod-template-hash: 7776484bf7
    name: fb-worker-7776484bf7
    namespace: crawler-apps
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: fb-worker
      uid: 47c18eaa-ce13-4e61-aeac-999559dba941
    resourceVersion: "1526068"
    uid: 2f8b9adf-d672-406e-8366-e11c11deeb67
  spec:
    replicas: 30
    selector:
      matchLabels:
        app: taskQueue
        component: worker
        pod-template-hash: 7776484bf7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: taskQueue
          component: worker
          pod-template-hash: 7776484bf7
      spec:
        containers:
        - command:
          - bash
          - -c
          - nohup node ./proxy/proxy.js > ./proxy/log & /usr/local/bin/celery -A app
            worker --loglevel=info --concurrency=1 --max-tasks-per-child=1
          env:
          - name: FBS_DATABASE_POSTGRESQL_SERVICE_HOST
            value: postgresql://fbs:yah7WUy1Oi8G@192.168.11.202:5432/fbs
          image: registry.gitlab.com/thantzawlyn/fb_worker_update/main
          imagePullPolicy: Always
          name: worker
          resources:
            limits:
              cpu: 500m
              memory: 1200Mi
            requests:
              cpu: 300m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 30
    fullyLabeledReplicas: 30
    observedGeneration: 2
    readyReplicas: 30
    replicas: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-09-09T09:21:24Z"
    generation: 1
    labels:
      k8s-app: calico-kube-controllers
      pod-template-hash: 6879d4fcdc
    name: calico-kube-controllers-6879d4fcdc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: calico-kube-controllers
      uid: a9396e62-fa34-40a2-b924-c9c1d0424a24
    resourceVersion: "404347"
    uid: 5369f685-469a-42e5-bb79-6aefcc358270
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: calico-kube-controllers
        pod-template-hash: 6879d4fcdc
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: calico-kube-controllers
          pod-template-hash: 6879d4fcdc
        name: calico-kube-controllers
        namespace: kube-system
      spec:
        containers:
        - env:
          - name: ENABLED_CONTROLLERS
            value: node
          - name: DATASTORE_TYPE
            value: kubernetes
          image: docker.io/calico/kube-controllers:v3.25.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -l
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-kube-controllers
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-kube-controllers
        serviceAccountName: calico-kube-controllers
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-09-09T09:12:20Z"
    generation: 3
    labels:
      k8s-app: kube-dns
      pod-template-hash: 6f6b679f8f
    name: coredns-6f6b679f8f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: b45ad31c-4de0-4047-9303-dc0b5e5c0ebd
    resourceVersion: "1519653"
    uid: 918d2d98-a570-47fa-97ef-d33230d6a69a
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 6f6b679f8f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 6f6b679f8f
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-02-07T09:30:03Z"
    generation: 2
    labels:
      k8s-app: kube-dns
      pod-template-hash: 85555666d5
    name: coredns-85555666d5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: b45ad31c-4de0-4047-9303-dc0b5e5c0ebd
    resourceVersion: "1520656"
    uid: afad255d-f0c6-46b2-81e9-8e5e5224c3ea
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 85555666d5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-02-07T09:30:01Z"
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 85555666d5
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kube-state-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-02-07T09:25:05Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: kube-state-metrics
      app.kubernetes.io/name: kube-state-metrics
      pod-template-hash: 6b5955fdf5
    name: kube-state-metrics-6b5955fdf5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-state-metrics
      uid: d8ee581f-dd28-4cbb-9b20-f0cb40761c4d
    resourceVersion: "1519193"
    uid: 245dda13-1a26-4547-aec5-d69c96df3837
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 6b5955fdf5
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: kube-state-metrics
          app.kubernetes.io/name: kube-state-metrics
          pod-template-hash: 6b5955fdf5
      spec:
        containers:
        - args:
          - --collectors=certificatesigningrequests
          - --collectors=configmaps
          - --collectors=cronjobs
          - --collectors=daemonsets
          - --collectors=deployments
          - --collectors=endpoints
          - --collectors=horizontalpodautoscalers
          - --collectors=ingresses
          - --collectors=jobs
          - --collectors=limitranges
          - --collectors=mutatingwebhookconfigurations
          - --collectors=namespaces
          - --collectors=networkpolicies
          - --collectors=nodes
          - --collectors=persistentvolumeclaims
          - --collectors=persistentvolumes
          - --collectors=poddisruptionbudgets
          - --collectors=pods
          - --collectors=replicasets
          - --collectors=replicationcontrollers
          - --collectors=resourcequotas
          - --collectors=secrets
          - --collectors=services
          - --collectors=statefulsets
          - --collectors=storageclasses
          - --collectors=validatingwebhookconfigurations
          - --collectors=volumeattachments
          - --telemetry-port=8081
          image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v1.9.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsUser: 65534
        serviceAccount: kube-state-metrics
        serviceAccountName: kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-api
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.7.0
      helm.sh/chart: kubernetes-dashboard-7.5.0
      pod-template-hash: 78c496b88f
    name: kubernetes-dashboard-api-78c496b88f
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard-api
      uid: a608cf1e-9ff1-49c6-85c7-f75031f6245e
    resourceVersion: "405029"
    uid: 619bb260-59b4-4ce0-8f78-ddea43940b73
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/name: kubernetes-dashboard-api
        app.kubernetes.io/part-of: kubernetes-dashboard
        pod-template-hash: 78c496b88f
    template:
      metadata:
        annotations:
          checksum/config: f1b95ba3b88bb6e088f3fc4ba4cf4f28452bddbde5352a5c6130a9117cc9e3c9
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: api
          app.kubernetes.io/instance: kubernetes-dashboard
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kubernetes-dashboard-api
          app.kubernetes.io/part-of: kubernetes-dashboard
          app.kubernetes.io/version: 1.7.0
          helm.sh/chart: kubernetes-dashboard-7.5.0
          pod-template-hash: 78c496b88f
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --namespace=kubernetes-dashboard
          - --metrics-scraper-service-name=kubernetes-dashboard-metrics-scraper
          env:
          - name: CSRF_KEY
            valueFrom:
              secretKeyRef:
                key: private.key
                name: kubernetes-dashboard-csrf
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.memory
          image: docker.io/kubernetesui/dashboard-api:1.7.0
          imagePullPolicy: IfNotPresent
          name: kubernetes-dashboard-api
          ports:
          - containerPort: 8000
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: kubernetes-dashboard-api
        serviceAccountName: kubernetes-dashboard-api
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: auth
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-auth
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.1.3
      helm.sh/chart: kubernetes-dashboard-7.5.0
      pod-template-hash: ccfff5767
    name: kubernetes-dashboard-auth-ccfff5767
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard-auth
      uid: ff1a8921-1b3a-4d41-bf64-2cc705487686
    resourceVersion: "405014"
    uid: 98e58e0f-3cef-4105-9f23-b5b787965810
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/name: kubernetes-dashboard-auth
        app.kubernetes.io/part-of: kubernetes-dashboard
        pod-template-hash: ccfff5767
    template:
      metadata:
        annotations:
          checksum/config: 04119731f36b293bb4179841b760b2deaf2dc6f47e41c8baef649f3668892e75
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: auth
          app.kubernetes.io/instance: kubernetes-dashboard
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kubernetes-dashboard-auth
          app.kubernetes.io/part-of: kubernetes-dashboard
          app.kubernetes.io/version: 1.1.3
          helm.sh/chart: kubernetes-dashboard-7.5.0
          pod-template-hash: ccfff5767
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: CSRF_KEY
            valueFrom:
              secretKeyRef:
                key: private.key
                name: kubernetes-dashboard-csrf
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.memory
          image: docker.io/kubernetesui/dashboard-auth:1.1.3
          imagePullPolicy: IfNotPresent
          name: kubernetes-dashboard-auth
          ports:
          - containerPort: 8000
            name: auth
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    generation: 1
    labels:
      app: kubernetes-dashboard-kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kong
      app.kubernetes.io/version: "3.6"
      helm.sh/chart: kong-2.38.0
      pod-template-hash: 57d45c4f69
      version: "3.6"
    name: kubernetes-dashboard-kong-57d45c4f69
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard-kong
      uid: 2c9aec7a-b590-4aa5-9f7a-138c36c38b04
    resourceVersion: "1484867"
    uid: 84d09446-f34e-47bb-b9ad-f14b6908ccc1
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: app
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/name: kong
        pod-template-hash: 57d45c4f69
    template:
      metadata:
        annotations:
          kuma.io/gateway: enabled
          kuma.io/service-account-token-volume: kubernetes-dashboard-kong-token
          traffic.sidecar.istio.io/includeInboundPorts: ""
        creationTimestamp: null
        labels:
          app: kubernetes-dashboard-kong
          app.kubernetes.io/component: app
          app.kubernetes.io/instance: kubernetes-dashboard
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kong
          app.kubernetes.io/version: "3.6"
          helm.sh/chart: kong-2.38.0
          pod-template-hash: 57d45c4f69
          version: "3.6"
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: KONG_ADMIN_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_ADMIN_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ADMIN_GUI_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_ADMIN_GUI_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ADMIN_LISTEN
            value: 127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl
          - name: KONG_CLUSTER_LISTEN
            value: "off"
          - name: KONG_DATABASE
            value: "off"
          - name: KONG_DECLARATIVE_CONFIG
            value: /kong_dbless/kong.yml
          - name: KONG_DNS_ORDER
            value: LAST,A,CNAME,AAAA,SRV
          - name: KONG_LUA_PACKAGE_PATH
            value: /opt/?.lua;/opt/?/init.lua;;
          - name: KONG_NGINX_WORKER_PROCESSES
            value: "1"
          - name: KONG_PLUGINS
            value: "off"
          - name: KONG_PORTAL_API_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_PORTAL_API_ERROR_LOG
            value: /dev/stderr
          - name: KONG_PORT_MAPS
            value: 443:8443
          - name: KONG_PREFIX
            value: /kong_prefix/
          - name: KONG_PROXY_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_PROXY_ERROR_LOG
            value: /dev/stderr
          - name: KONG_PROXY_LISTEN
            value: 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl
          - name: KONG_PROXY_STREAM_ACCESS_LOG
            value: /dev/stdout basic
          - name: KONG_PROXY_STREAM_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ROUTER_FLAVOR
            value: traditional
          - name: KONG_STATUS_ACCESS_LOG
            value: "off"
          - name: KONG_STATUS_ERROR_LOG
            value: /dev/stderr
          - name: KONG_STATUS_LISTEN
            value: 0.0.0.0:8100, [::]:8100
          - name: KONG_STREAM_LISTEN
            value: "off"
          - name: KONG_NGINX_DAEMON
            value: "off"
          image: kong:3.6
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - kong
                - quit
                - --wait=15
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: status
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: proxy
          ports:
          - containerPort: 8443
            name: proxy-tls
            protocol: TCP
          - containerPort: 8100
            name: status
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /status/ready
              port: status
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kong_prefix/
            name: kubernetes-dashboard-kong-prefix-dir
          - mountPath: /tmp
            name: kubernetes-dashboard-kong-tmp
          - mountPath: /kong_dbless/
            name: kong-custom-dbless-config-volume
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - rm
          - -vrf
          - $KONG_PREFIX/pids
          env:
          - name: KONG_ADMIN_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_ADMIN_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ADMIN_GUI_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_ADMIN_GUI_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ADMIN_LISTEN
            value: 127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl
          - name: KONG_CLUSTER_LISTEN
            value: "off"
          - name: KONG_DATABASE
            value: "off"
          - name: KONG_DECLARATIVE_CONFIG
            value: /kong_dbless/kong.yml
          - name: KONG_DNS_ORDER
            value: LAST,A,CNAME,AAAA,SRV
          - name: KONG_LUA_PACKAGE_PATH
            value: /opt/?.lua;/opt/?/init.lua;;
          - name: KONG_NGINX_WORKER_PROCESSES
            value: "1"
          - name: KONG_PLUGINS
            value: "off"
          - name: KONG_PORTAL_API_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_PORTAL_API_ERROR_LOG
            value: /dev/stderr
          - name: KONG_PORT_MAPS
            value: 443:8443
          - name: KONG_PREFIX
            value: /kong_prefix/
          - name: KONG_PROXY_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_PROXY_ERROR_LOG
            value: /dev/stderr
          - name: KONG_PROXY_LISTEN
            value: 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl
          - name: KONG_PROXY_STREAM_ACCESS_LOG
            value: /dev/stdout basic
          - name: KONG_PROXY_STREAM_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ROUTER_FLAVOR
            value: traditional
          - name: KONG_STATUS_ACCESS_LOG
            value: "off"
          - name: KONG_STATUS_ERROR_LOG
            value: /dev/stderr
          - name: KONG_STATUS_LISTEN
            value: 0.0.0.0:8100, [::]:8100
          - name: KONG_STREAM_LISTEN
            value: "off"
          image: kong:3.6
          imagePullPolicy: IfNotPresent
          name: clear-stale-pid
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kong_prefix/
            name: kubernetes-dashboard-kong-prefix-dir
          - mountPath: /tmp
            name: kubernetes-dashboard-kong-tmp
          - mountPath: /kong_dbless/
            name: kong-custom-dbless-config-volume
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard-kong
        serviceAccountName: kubernetes-dashboard-kong
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            sizeLimit: 256Mi
          name: kubernetes-dashboard-kong-prefix-dir
        - emptyDir:
            sizeLimit: 1Gi
          name: kubernetes-dashboard-kong-tmp
        - name: kubernetes-dashboard-kong-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - configMap:
            defaultMode: 420
            name: kong-dbless-config
          name: kong-custom-dbless-config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: metrics-scraper
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.1.1
      helm.sh/chart: kubernetes-dashboard-7.5.0
      pod-template-hash: 57cf4c69b6
    name: kubernetes-dashboard-metrics-scraper-57cf4c69b6
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard-metrics-scraper
      uid: 8a918cea-6255-42e8-9272-164d9f74b80f
    resourceVersion: "405008"
    uid: 483c7470-10d8-4ce0-aef0-30163af01d1d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
        app.kubernetes.io/part-of: kubernetes-dashboard
        pod-template-hash: 57cf4c69b6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics-scraper
          app.kubernetes.io/instance: kubernetes-dashboard
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
          app.kubernetes.io/part-of: kubernetes-dashboard
          app.kubernetes.io/version: 1.1.1
          helm.sh/chart: kubernetes-dashboard-7.5.0
          pod-template-hash: 57cf4c69b6
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.memory
          image: docker.io/kubernetesui/dashboard-metrics-scraper:1.1.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: kubernetes-dashboard-metrics-scraper
        serviceAccountName: kubernetes-dashboard-metrics-scraper
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kubernetes-dashboard
      meta.helm.sh/release-namespace: kubernetes-dashboard
    creationTimestamp: "2024-09-09T09:57:33Z"
    generation: 1
    labels:
      app.kubernetes.io/component: web
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubernetes-dashboard-web
      app.kubernetes.io/part-of: kubernetes-dashboard
      app.kubernetes.io/version: 1.4.0
      helm.sh/chart: kubernetes-dashboard-7.5.0
      pod-template-hash: 7458b6d977
    name: kubernetes-dashboard-web-7458b6d977
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard-web
      uid: 1f61eff5-697b-47fc-8d4d-2c36b94b3cbb
    resourceVersion: "405019"
    uid: ecb9ee79-7790-48c9-b445-1b052e033bf5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/name: kubernetes-dashboard-web
        app.kubernetes.io/part-of: kubernetes-dashboard
        pod-template-hash: 7458b6d977
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: web
          app.kubernetes.io/instance: kubernetes-dashboard
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kubernetes-dashboard-web
          app.kubernetes.io/part-of: kubernetes-dashboard
          app.kubernetes.io/version: 1.4.0
          helm.sh/chart: kubernetes-dashboard-7.5.0
          pod-template-hash: 7458b6d977
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --namespace=kubernetes-dashboard
          - --settings-config-map-name=kubernetes-dashboard-web-settings
          env:
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.memory
          image: docker.io/kubernetesui/dashboard-web:1.4.0
          imagePullPolicy: IfNotPresent
          name: kubernetes-dashboard-web
          ports:
          - containerPort: 8000
            name: web
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: kubernetes-dashboard-web
        serviceAccountName: kubernetes-dashboard-web
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-09-09T10:46:50Z"
    generation: 1
    labels:
      app: grafana
      pod-template-hash: f7b7d98db
    name: grafana-f7b7d98db
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 18ade1d7-f694-4abe-b2d3-d44320f447b9
    resourceVersion: "405100"
    uid: d9bb479c-7556-47bb-895e-216e6d492ddc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: grafana
        pod-template-hash: f7b7d98db
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: grafana
          pod-template-hash: f7b7d98db
        name: grafana
      spec:
        containers:
        - image: grafana/grafana:latest
          imagePullPolicy: Always
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 500M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-storage
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-datasources
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: grafana-storage
        - configMap:
            defaultMode: 420
            name: grafana-datasources
          name: grafana-datasources
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-09-09T10:47:16Z"
    generation: 1
    labels:
      app: prometheus-server
      pod-template-hash: 6869656f4f
    name: prometheus-deployment-6869656f4f
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-deployment
      uid: 502b3345-cd5d-4970-830b-208faa80fd7d
    resourceVersion: "405062"
    uid: 5f548b80-17c2-4b92-8ad4-450732900bcd
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: prometheus-server
        pod-template-hash: 6869656f4f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: prometheus-server
          pod-template-hash: 6869656f4f
      spec:
        containers:
        - args:
          - --storage.tsdb.retention.time=12h
          - --config.file=/etc/prometheus/prometheus.yml
          - --storage.tsdb.path=/prometheus/
          image: prom/prometheus
          imagePullPolicy: Always
          name: prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 500M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus/
            name: prometheus-config-volume
          - mountPath: /prometheus/
            name: prometheus-storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server-conf
          name: prometheus-config-volume
        - emptyDir: {}
          name: prometheus-storage-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
